{
  "contractName": "AgreementBase",
  "abi": [
    {
      "inputs": [],
      "name": "AGREEMENT_BASE_ONLY_HOST",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "uuid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "name": "CodeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "agreementType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "castrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCodeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "realtimeBalanceOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "dynamicBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AGREEMENT_BASE_ONLY_HOST\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uuid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"name\":\"CodeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agreementType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"castrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCodeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"dynamicBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"agreementType()\":{\"details\":\"Get the type of the agreement class\"},\"getCodeAddress()\":{\"details\":\"Get current implementation code address.\"},\"proxiableUUID()\":{\"details\":\"Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT.\"},\"realtimeBalanceOf(address,address,uint256)\":{\"details\":\"Calculate the real-time balance for the account of this agreement class\",\"params\":{\"account\":\"Account the state belongs to\",\"time\":\"Time used for the calculation\"},\"returns\":{\"deposit\":\"Account deposit amount of this agreement\",\"dynamicBalance\":\"Dynamic balance portion of real-time balance of this agreement\",\"owedDeposit\":\"Account owed deposit amount of this agreement\"}}},\"title\":\"Superfluid agreement base boilerplate contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/agreements/AgreementBase.sol\":\"AgreementBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"project:/contracts/agreements/AgreementBase.sol\":{\"keccak256\":\"0x55af713bcc9c81e4babb25bf6c101e93e8fb9f33add5fae3bb452e6deb7b5d86\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://34a896954f1d2c61b5958e4f0fb34223183c67d985f2bf890e132545ce4024cf\",\"dweb:/ipfs/Qmar5eiNhNikMiVr9DDYxSzns1HPKeeLA23P1ohkCzEvTd\"]},\"project:/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06\",\"dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1\",\"dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7\"]},\"project:/contracts/upgradability/UUPSProxiable.sol\":{\"keccak256\":\"0xcd11f89eefcb57272114b401c696837084198459aec9f978cf7772fd6831e0e0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://1b3e03af5ab10ec6f1755e3730c6a86595bbb846c112fe2266ca11488f24b680\",\"dweb:/ipfs/QmPTdcuu5srUmfvNqmofGi9u7ENeaPSZDqqT2Ca2J98zHU\"]},\"project:/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0xfc0eeeb006f312fae9d8379f15c79b95d549304b2cf5135cfe7065f98197a695\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a42ccb4449be4c523c739ac0b267c4b49c174eb5d3e78895db6f51bba1e19059\",\"dweb:/ipfs/QmTiFo8nHwtsaUyGiR9ZZNi17pKZBZg9vbyQBe36oTPfYk\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: AGPLv3\npragma solidity ^0.8.23;\n\nimport { UUPSProxiable } from \"../upgradability/UUPSProxiable.sol\";\nimport { ISuperAgreement } from \"../interfaces/superfluid/ISuperAgreement.sol\";\n\n/**\n * @title Superfluid agreement base boilerplate contract\n * @author Superfluid\n */\nabstract contract AgreementBase is\n    UUPSProxiable,\n    ISuperAgreement\n{\n    address immutable internal _host;\n\n    // Custom Erorrs\n    error AGREEMENT_BASE_ONLY_HOST(); // 0x1601d91e\n\n    constructor(address host)\n    {\n        _host = host;\n    }\n\n    function proxiableUUID()\n        public view override\n        returns (bytes32)\n    {\n        return ISuperAgreement(this).agreementType();\n    }\n\n    function updateCode(address newAddress)\n        external override\n    {\n        if (msg.sender != _host) revert AGREEMENT_BASE_ONLY_HOST();\n        return _updateCodeAddress(newAddress);\n    }\n\n}\n",
  "sourcePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/agreements/AgreementBase.sol",
  "ast": {
    "absolutePath": "project:/contracts/agreements/AgreementBase.sol",
    "exportedSymbols": {
      "AgreementBase": [
        11263
      ],
      "ISuperAgreement": [
        37553
      ],
      "UUPSProxiable": [
        60078
      ]
    },
    "id": 11264,
    "license": "AGPLv3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11207,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:24:45"
      },
      {
        "absolutePath": "project:/contracts/upgradability/UUPSProxiable.sol",
        "file": "../upgradability/UUPSProxiable.sol",
        "id": 11209,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11264,
        "sourceUnit": 60079,
        "src": "61:67:45",
        "symbolAliases": [
          {
            "foreign": {
              "id": 11208,
              "name": "UUPSProxiable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60078,
              "src": "70:13:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "file": "../interfaces/superfluid/ISuperAgreement.sol",
        "id": 11211,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11264,
        "sourceUnit": 37554,
        "src": "129:79:45",
        "symbolAliases": [
          {
            "foreign": {
              "id": 11210,
              "name": "ISuperAgreement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37553,
              "src": "138:15:45",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 11213,
              "name": "UUPSProxiable",
              "nameLocations": [
                "336:13:45"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 60078,
              "src": "336:13:45"
            },
            "id": 11214,
            "nodeType": "InheritanceSpecifier",
            "src": "336:13:45"
          },
          {
            "baseName": {
              "id": 11215,
              "name": "ISuperAgreement",
              "nameLocations": [
                "355:15:45"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37553,
              "src": "355:15:45"
            },
            "id": 11216,
            "nodeType": "InheritanceSpecifier",
            "src": "355:15:45"
          }
        ],
        "canonicalName": "AgreementBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11212,
          "nodeType": "StructuredDocumentation",
          "src": "210:86:45",
          "text": " @title Superfluid agreement base boilerplate contract\n @author Superfluid"
        },
        "fullyImplemented": false,
        "id": 11263,
        "linearizedBaseContracts": [
          11263,
          37553,
          60078,
          1383
        ],
        "name": "AgreementBase",
        "nameLocation": "315:13:45",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 11218,
            "mutability": "immutable",
            "name": "_host",
            "nameLocation": "404:5:45",
            "nodeType": "VariableDeclaration",
            "scope": 11263,
            "src": "377:32:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11217,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "377:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "errorSelector": "1601d91e",
            "id": 11220,
            "name": "AGREEMENT_BASE_ONLY_HOST",
            "nameLocation": "443:24:45",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 11219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:2:45"
            },
            "src": "437:33:45"
          },
          {
            "body": {
              "id": 11229,
              "nodeType": "Block",
              "src": "520:29:45",
              "statements": [
                {
                  "expression": {
                    "id": 11227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11225,
                      "name": "_host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11218,
                      "src": "530:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11226,
                      "name": "host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11222,
                      "src": "538:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "530:12:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11228,
                  "nodeType": "ExpressionStatement",
                  "src": "530:12:45"
                }
              ]
            },
            "id": 11230,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11222,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "510:4:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11230,
                  "src": "502:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "501:14:45"
            },
            "returnParameters": {
              "id": 11224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "520:0:45"
            },
            "scope": 11263,
            "src": "490:59:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              60018
            ],
            "body": {
              "id": 11242,
              "nodeType": "Block",
              "src": "639:61:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 11237,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "672:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AgreementBase_$11263",
                              "typeString": "contract AgreementBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AgreementBase_$11263",
                              "typeString": "contract AgreementBase"
                            }
                          ],
                          "id": 11236,
                          "name": "ISuperAgreement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37553,
                          "src": "656:15:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISuperAgreement_$37553_$",
                            "typeString": "type(contract ISuperAgreement)"
                          }
                        },
                        "id": 11238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "656:21:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperAgreement_$37553",
                          "typeString": "contract ISuperAgreement"
                        }
                      },
                      "id": 11239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "678:13:45",
                      "memberName": "agreementType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37535,
                      "src": "656:35:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 11240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "656:37:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 11235,
                  "id": 11241,
                  "nodeType": "Return",
                  "src": "649:44:45"
                }
              ]
            },
            "functionSelector": "52d1902d",
            "id": 11243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxiableUUID",
            "nameLocation": "564:13:45",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11232,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "600:8:45"
            },
            "parameters": {
              "id": 11231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "577:2:45"
            },
            "returnParameters": {
              "id": 11235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11243,
                  "src": "626:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11233,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "625:9:45"
            },
            "scope": 11263,
            "src": "555:145:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              60006
            ],
            "body": {
              "id": 11261,
              "nodeType": "Block",
              "src": "776:122:45",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 11249,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "790:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "794:6:45",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "790:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 11251,
                      "name": "_host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11218,
                      "src": "804:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "790:19:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11256,
                  "nodeType": "IfStatement",
                  "src": "786:58:45",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 11253,
                        "name": "AGREEMENT_BASE_ONLY_HOST",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11220,
                        "src": "818:24:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                          "typeString": "function () pure returns (error)"
                        }
                      },
                      "id": 11254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "818:26:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_error",
                        "typeString": "error"
                      }
                    },
                    "id": 11255,
                    "nodeType": "RevertStatement",
                    "src": "811:33:45"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11258,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11245,
                        "src": "880:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11257,
                      "name": "_updateCodeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60071,
                      "src": "861:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "861:30:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 11248,
                  "id": 11260,
                  "nodeType": "Return",
                  "src": "854:37:45"
                }
              ]
            },
            "functionSelector": "46951954",
            "id": 11262,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateCode",
            "nameLocation": "715:10:45",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11247,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "763:8:45"
            },
            "parameters": {
              "id": 11246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11245,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "734:10:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11262,
                  "src": "726:18:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "726:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "725:20:45"
            },
            "returnParameters": {
              "id": 11248,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "776:0:45"
            },
            "scope": 11263,
            "src": "706:192:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 11264,
        "src": "297:604:45",
        "usedErrors": [
          11220
        ],
        "usedEvents": [
          1229,
          60077
        ]
      }
    ],
    "src": "35:867:45"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.26+commit.8a97fa7a.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-08-06T17:02:39.474Z",
  "devdoc": {
    "author": "Superfluid",
    "events": {
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      }
    },
    "kind": "dev",
    "methods": {
      "agreementType()": {
        "details": "Get the type of the agreement class"
      },
      "getCodeAddress()": {
        "details": "Get current implementation code address."
      },
      "proxiableUUID()": {
        "details": "Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT."
      },
      "realtimeBalanceOf(address,address,uint256)": {
        "details": "Calculate the real-time balance for the account of this agreement class",
        "params": {
          "account": "Account the state belongs to",
          "time": "Time used for the calculation"
        },
        "returns": {
          "deposit": "Account deposit amount of this agreement",
          "dynamicBalance": "Dynamic balance portion of real-time balance of this agreement",
          "owedDeposit": "Account owed deposit amount of this agreement"
        }
      }
    },
    "title": "Superfluid agreement base boilerplate contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}