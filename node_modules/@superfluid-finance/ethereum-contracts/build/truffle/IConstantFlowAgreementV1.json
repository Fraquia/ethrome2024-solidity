{
  "contractName": "IConstantFlowAgreementV1",
  "abi": [
    {
      "inputs": [],
      "name": "CFA_ACL_FLOW_RATE_ALLOWANCE_EXCEEDED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_ACL_NO_NEGATIVE_ALLOWANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_ACL_NO_SENDER_CREATE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_ACL_NO_SENDER_FLOW_OPERATOR",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_ACL_NO_SENDER_UPDATE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_ACL_OPERATOR_NO_CREATE_PERMISSIONS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_ACL_OPERATOR_NO_DELETE_PERMISSIONS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_ACL_OPERATOR_NO_UPDATE_PERMISSIONS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_ACL_UNCLEAN_PERMISSIONS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_DEPOSIT_TOO_BIG",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_FLOW_ALREADY_EXISTS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_FLOW_DOES_NOT_EXIST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_FLOW_RATE_TOO_BIG",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_HOOK_OUT_OF_GAS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_INVALID_FLOW_RATE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NON_CRITICAL_SENDER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NO_SELF_FLOW",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_ZERO_ADDRESS_RECEIVER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_ZERO_ADDRESS_SENDER",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "flowOperator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "permissions",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "int96",
          "name": "flowRateAllowance",
          "type": "int96"
        }
      ],
      "name": "FlowOperatorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "totalSenderFlowRate",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "totalReceiverFlowRate",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "FlowUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "flowOperator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        }
      ],
      "name": "FlowUpdatedExtension",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "realtimeBalanceOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "dynamicBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "agreementType",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        }
      ],
      "name": "getMaximumFlowRateFromDeposit",
      "outputs": [
        {
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        }
      ],
      "name": "getDepositRequiredForFlowRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPatricianPeriodNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCurrentlyPatricianPeriod",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isPatricianPeriod",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "flowOperator",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "permissions",
          "type": "uint8"
        },
        {
          "internalType": "int96",
          "name": "flowRateAllowance",
          "type": "int96"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "updateFlowOperatorPermissions",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "flowOperator",
          "type": "address"
        },
        {
          "internalType": "int96",
          "name": "addedFlowRateAllowance",
          "type": "int96"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "increaseFlowRateAllowance",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "flowOperator",
          "type": "address"
        },
        {
          "internalType": "int96",
          "name": "subtractedFlowRateAllowance",
          "type": "int96"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "decreaseFlowRateAllowance",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "flowOperator",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "permissionsToAdd",
          "type": "uint8"
        },
        {
          "internalType": "int96",
          "name": "addedFlowRateAllowance",
          "type": "int96"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "increaseFlowRateAllowanceWithPermissions",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "flowOperator",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "permissionsToRemove",
          "type": "uint8"
        },
        {
          "internalType": "int96",
          "name": "subtractedFlowRateAllowance",
          "type": "int96"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "decreaseFlowRateAllowanceWithPermissions",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "flowOperator",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "authorizeFlowOperatorWithFullControl",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "flowOperator",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "revokeFlowOperatorWithFullControl",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "flowOperator",
          "type": "address"
        }
      ],
      "name": "getFlowOperatorData",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "flowOperatorId",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "permissions",
          "type": "uint8"
        },
        {
          "internalType": "int96",
          "name": "flowRateAllowance",
          "type": "int96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "flowOperatorId",
          "type": "bytes32"
        }
      ],
      "name": "getFlowOperatorDataByID",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "permissions",
          "type": "uint8"
        },
        {
          "internalType": "int96",
          "name": "flowRateAllowance",
          "type": "int96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "createFlow",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "createFlowByOperator",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "updateFlow",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "updateFlowByOperator",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "getFlow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "agreementId",
          "type": "bytes32"
        }
      ],
      "name": "getFlowByID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountFlowInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getNetFlow",
      "outputs": [
        {
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "deleteFlow",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluidToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "ctx",
          "type": "bytes"
        }
      ],
      "name": "deleteFlowByOperator",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "newCtx",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CFA_ACL_FLOW_RATE_ALLOWANCE_EXCEEDED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ACL_NO_NEGATIVE_ALLOWANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ACL_NO_SENDER_CREATE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ACL_NO_SENDER_FLOW_OPERATOR\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ACL_NO_SENDER_UPDATE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ACL_OPERATOR_NO_CREATE_PERMISSIONS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ACL_OPERATOR_NO_DELETE_PERMISSIONS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ACL_OPERATOR_NO_UPDATE_PERMISSIONS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ACL_UNCLEAN_PERMISSIONS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_DEPOSIT_TOO_BIG\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_FLOW_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_FLOW_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_FLOW_RATE_TOO_BIG\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_HOOK_OUT_OF_GAS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_INVALID_FLOW_RATE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NON_CRITICAL_SENDER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NO_SELF_FLOW\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ZERO_ADDRESS_RECEIVER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_ZERO_ADDRESS_SENDER\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"permissions\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"int96\",\"name\":\"flowRateAllowance\",\"type\":\"int96\"}],\"name\":\"FlowOperatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"totalSenderFlowRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"totalReceiverFlowRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"FlowUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"name\":\"FlowUpdatedExtension\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agreementType\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"authorizeFlowOperatorWithFullControl\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"createFlow\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"createFlowByOperator\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"subtractedFlowRateAllowance\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"decreaseFlowRateAllowance\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"permissionsToRemove\",\"type\":\"uint8\"},{\"internalType\":\"int96\",\"name\":\"subtractedFlowRateAllowance\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"decreaseFlowRateAllowanceWithPermissions\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"deleteFlow\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"deleteFlowByOperator\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountFlowInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"name\":\"getDepositRequiredForFlowRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"getFlow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"agreementId\",\"type\":\"bytes32\"}],\"name\":\"getFlowByID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"}],\"name\":\"getFlowOperatorData\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"flowOperatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"permissions\",\"type\":\"uint8\"},{\"internalType\":\"int96\",\"name\":\"flowRateAllowance\",\"type\":\"int96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"flowOperatorId\",\"type\":\"bytes32\"}],\"name\":\"getFlowOperatorDataByID\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"permissions\",\"type\":\"uint8\"},{\"internalType\":\"int96\",\"name\":\"flowRateAllowance\",\"type\":\"int96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"}],\"name\":\"getMaximumFlowRateFromDeposit\",\"outputs\":[{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNetFlow\",\"outputs\":[{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"addedFlowRateAllowance\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"increaseFlowRateAllowance\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"permissionsToAdd\",\"type\":\"uint8\"},{\"internalType\":\"int96\",\"name\":\"addedFlowRateAllowance\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"increaseFlowRateAllowanceWithPermissions\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isPatricianPeriod\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPatricianPeriodNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCurrentlyPatricianPeriod\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"dynamicBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"revokeFlowOperatorWithFullControl\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"updateFlow\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"updateFlowByOperator\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ISuperfluidToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowOperator\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"permissions\",\"type\":\"uint8\"},{\"internalType\":\"int96\",\"name\":\"flowRateAllowance\",\"type\":\"int96\"},{\"internalType\":\"bytes\",\"name\":\"ctx\",\"type\":\"bytes\"}],\"name\":\"updateFlowOperatorPermissions\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"newCtx\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"FlowOperatorUpdated(address,address,address,uint8,int96)\":{\"details\":\"Flow operator updated event\",\"params\":{\"flowOperator\":\"Flow operator address\",\"flowRateAllowance\":\"The flow rate allowance the `flowOperator` is granted (only goes down)\",\"permissions\":\"Octo bitmask representation of permissions\",\"sender\":\"Flow sender address\",\"token\":\"Super token address\"}},\"FlowUpdated(address,address,address,int96,int256,int256,bytes)\":{\"details\":\"Flow updated event\",\"params\":{\"flowRate\":\"Flow rate in amount per second for this flow\",\"receiver\":\"Flow recipient address\",\"sender\":\"Flow sender address\",\"token\":\"Super token address\",\"totalReceiverFlowRate\":\"Total flow rate in amount per second for the receiver\",\"totalSenderFlowRate\":\"Total flow rate in amount per second for the sender\",\"userData\":\"The user provided data\"}},\"FlowUpdatedExtension(address,uint256)\":{\"details\":\"Flow updated extension event\",\"params\":{\"deposit\":\"The deposit amount for the stream\",\"flowOperator\":\"Flow operator address - the Context.msgSender\"}}},\"kind\":\"dev\",\"methods\":{\"agreementType()\":{\"details\":\"ISuperAgreement.agreementType implementation\"},\"authorizeFlowOperatorWithFullControl(address,address,bytes)\":{\"details\":\"msgSender from `ctx` grants `flowOperator` all permissions with flowRateAllowance as type(int96).max\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowOperator\":\"The permission grantee address\",\"token\":\"Super token address\"}},\"createFlow(address,address,int96,bytes)\":{\"custom:callbacks\":\"- AgreementCreated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver)\",\"custom:note\":\"- A deposit is taken as safety margin for the solvency agents - A extra gas fee may be taken to pay for solvency agent liquidations\",\"details\":\"flowId (agreementId) is the keccak256 hash of encoded sender and receiver\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowRate\":\"New flow rate in amount per second\",\"receiver\":\"Flow receiver address\",\"token\":\"Super token address\"}},\"createFlowByOperator(address,address,address,int96,bytes)\":{\"details\":\"A flow created by an approved flow operator (see above for details on callbacks)\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowRate\":\"New flow rate in amount per second\",\"receiver\":\"Flow receiver address\",\"sender\":\"Flow sender address (has granted permissions)\",\"token\":\"Super token address\"}},\"decreaseFlowRateAllowance(address,address,int96,bytes)\":{\"details\":\"msgSender from `ctx` decreases flow rate allowance for the `flowOperator` by `subtractedFlowRateAllowance`if `subtractedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowOperator\":\"The permission grantee address\",\"subtractedFlowRateAllowance\":\"The flow rate allowance delta\",\"token\":\"Super token address\"},\"returns\":{\"newCtx\":\"The new context bytes\"}},\"decreaseFlowRateAllowanceWithPermissions(address,address,uint8,int96,bytes)\":{\"details\":\"msgSender from `ctx` decreases flow rate allowance for the `flowOperator` by `subtractedFlowRateAllowance`if `subtractedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowOperator\":\"The permission grantee address\",\"permissionsToRemove\":\"A bitmask representation of the granted permissions to remove as a delta\",\"subtractedFlowRateAllowance\":\"The flow rate allowance delta\",\"token\":\"Super token address\"},\"returns\":{\"newCtx\":\"The new context bytes\"}},\"deleteFlow(address,address,address,bytes)\":{\"custom:callbacks\":\"- AgreementTerminated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver)\",\"custom:note\":\"- Both flow sender and receiver may delete the flow - If Sender account is insolvent or in critical state, a solvency agent may   also terminate the agreement - Gas fee may be returned to the sender\",\"details\":\"flowId (agreementId) is the keccak256 hash of encoded sender and receiver\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"receiver\":\"Flow receiver address\",\"token\":\"Super token address\"}},\"deleteFlowByOperator(address,address,address,bytes)\":{\"details\":\"A flow deleted by an approved flow operator (see above for details on callbacks)\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"receiver\":\"Flow receiver address\",\"token\":\"Super token address\"}},\"getAccountFlowInfo(address,address)\":{\"details\":\"Get the aggregated flow info of the account\",\"params\":{\"account\":\"Account for the query\",\"token\":\"Super token address\"},\"returns\":{\"deposit\":\"The sum of all deposits for account's flows\",\"flowRate\":\"The net flow rate of token for account\",\"owedDeposit\":\"The sum of all owed deposits for account's flows\",\"timestamp\":\"Timestamp of when a flow was last updated for account\"}},\"getDepositRequiredForFlowRate(address,int96)\":{\"custom:note\":\"- if calculated deposit (flowRate * liquidationPeriod) is less   than the minimum deposit, we use the minimum deposit otherwise   we use the calculated deposit\",\"details\":\"Calculates the deposit based on the liquidationPeriod and flowRate\",\"params\":{\"flowRate\":\"Flow rate to be tested\"},\"returns\":{\"deposit\":\"The deposit amount based on flowRate and liquidationPeriod\"}},\"getFlow(address,address,address)\":{\"details\":\"Get the flow data between `sender` and `receiver` of `token`\",\"params\":{\"receiver\":\"Flow receiver\",\"sender\":\"Flow sender\",\"token\":\"Super token address\"},\"returns\":{\"deposit\":\"The amount of deposit the flow\",\"flowRate\":\"The flow rate\",\"owedDeposit\":\"The amount of owed deposit of the flow\",\"timestamp\":\"Timestamp of when the flow is updated\"}},\"getFlowByID(address,bytes32)\":{\"details\":\"flowId (agreementId) is the keccak256 hash of encoded sender and receiver\",\"params\":{\"agreementId\":\"The agreement ID\",\"token\":\"Super token address\"},\"returns\":{\"deposit\":\"The deposit amount of the flow\",\"flowRate\":\"The flow rate\",\"owedDeposit\":\"The owed deposit amount of the flow\",\"timestamp\":\"Timestamp of when the flow is updated\"}},\"getFlowOperatorData(address,address,address)\":{\"params\":{\"flowOperator\":\"The permission grantee address\",\"sender\":\"The permission granter address\",\"token\":\"Super token address\"},\"returns\":{\"flowOperatorId\":\"The keccak256 hash of encoded string \\\"flowOperator\\\", sender and flowOperator\",\"flowRateAllowance\":\"The flow rate allowance the `flowOperator` is granted (only goes down)\",\"permissions\":\"A bitmask representation of the granted permissions\"}},\"getFlowOperatorDataByID(address,bytes32)\":{\"params\":{\"flowOperatorId\":\"The keccak256 hash of encoded string \\\"flowOperator\\\", sender and flowOperator\",\"token\":\"Super token address\"},\"returns\":{\"flowRateAllowance\":\"The flow rate allowance the `flowOperator` is granted (only goes down)\",\"permissions\":\"A bitmask representation of the granted permissions\"}},\"getMaximumFlowRateFromDeposit(address,uint256)\":{\"details\":\"The deposit is clipped and rounded down\",\"params\":{\"deposit\":\"Deposit amount used for creating the flow\"},\"returns\":{\"flowRate\":\"The maximum flow rate\"}},\"getNetFlow(address,address)\":{\"details\":\"Get the net flow rate of the account\",\"params\":{\"account\":\"Account for the query\",\"token\":\"Super token address\"},\"returns\":{\"flowRate\":\"Net flow rate\"}},\"increaseFlowRateAllowance(address,address,int96,bytes)\":{\"details\":\"if `addedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE\",\"params\":{\"addedFlowRateAllowance\":\"The flow rate allowance delta\",\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowOperator\":\"The permission grantee address\",\"token\":\"Super token address\"},\"returns\":{\"newCtx\":\"The new context bytes\"}},\"increaseFlowRateAllowanceWithPermissions(address,address,uint8,int96,bytes)\":{\"details\":\"msgSender from `ctx` increases flow rate allowance for the `flowOperator` by `addedFlowRateAllowance`if `addedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE\",\"params\":{\"addedFlowRateAllowance\":\"The flow rate allowance delta\",\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowOperator\":\"The permission grantee address\",\"permissionsToAdd\":\"A bitmask representation of the granted permissions to add as a delta\",\"token\":\"Super token address\"},\"returns\":{\"newCtx\":\"The new context bytes\"}},\"isPatricianPeriod(address,address,uint256)\":{\"details\":\"Returns whether it is the patrician period based on timestamp\",\"params\":{\"account\":\"The account we are interested in\",\"timestamp\":\"The timestamp we are interested in observing the result of isPatricianPeriod\"},\"returns\":{\"_0\":\"bool Whether it is currently the patrician period dictated by governance\"}},\"isPatricianPeriodNow(address,address)\":{\"details\":\"Returns whether it is the patrician period based on host.getNow()\",\"params\":{\"account\":\"The account we are interested in\"},\"returns\":{\"isCurrentlyPatricianPeriod\":\"Whether it is currently the patrician period dictated by governance\",\"timestamp\":\"The value of host.getNow()\"}},\"realtimeBalanceOf(address,address,uint256)\":{\"details\":\"Calculate the real-time balance for the account of this agreement class\",\"params\":{\"account\":\"Account the state belongs to\",\"time\":\"Time used for the calculation\"},\"returns\":{\"deposit\":\"Account deposit amount of this agreement\",\"dynamicBalance\":\"Dynamic balance portion of real-time balance of this agreement\",\"owedDeposit\":\"Account owed deposit amount of this agreement\"}},\"revokeFlowOperatorWithFullControl(address,address,bytes)\":{\"details\":\"`permissions` and `flowRateAllowance` will both be set to 0\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowOperator\":\"The permission grantee address\",\"token\":\"Super token address\"}},\"updateFlow(address,address,int96,bytes)\":{\"custom:callbacks\":\"- AgreementUpdated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver)\",\"custom:note\":\"- Only the flow sender may update the flow rate - Even if the flow rate is zero, the flow is not deleted from the system - Deposit amount will be adjusted accordingly - No new gas fee is charged\",\"details\":\"flowId (agreementId) is the keccak256 hash of encoded sender and receiver\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowRate\":\"New flow rate in amount per second\",\"receiver\":\"Flow receiver address\",\"token\":\"Super token address\"}},\"updateFlowByOperator(address,address,address,int96,bytes)\":{\"details\":\"A flow updated by an approved flow operator (see above for details on callbacks)\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowRate\":\"New flow rate in amount per second\",\"receiver\":\"Flow receiver address\",\"sender\":\"Flow sender address (has granted permissions)\",\"token\":\"Super token address\"}},\"updateFlowOperatorPermissions(address,address,uint8,int96,bytes)\":{\"details\":\"msgSender from `ctx` updates permissions for the `flowOperator` with `flowRateAllowance`\",\"params\":{\"ctx\":\"Context bytes (see ISuperfluid.sol for Context struct)\",\"flowOperator\":\"The permission grantee address\",\"flowRateAllowance\":\"The flow rate allowance the `flowOperator` is granted (only goes down)\",\"permissions\":\"A bitmask representation of the granted permissions\",\"token\":\"Super token address\"}}},\"title\":\"Constant Flow Agreement interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createFlow(address,address,int96,bytes)\":{\"notice\":\"Create a flow betwen ctx.msgSender and receiver\"},\"createFlowByOperator(address,address,address,int96,bytes)\":{\"notice\":\"Create a flow between sender and receiver\"},\"deleteFlow(address,address,address,bytes)\":{\"notice\":\"Delete the flow between sender and receiver\"},\"deleteFlowByOperator(address,address,address,bytes)\":{\"notice\":\"Delete the flow between sender and receiver\"},\"getDepositRequiredForFlowRate(address,int96)\":{\"notice\":\"Get the deposit required for creating the flow\"},\"getFlowByID(address,bytes32)\":{\"notice\":\"Get flow data using agreementId\"},\"getFlowOperatorData(address,address,address)\":{\"notice\":\"Get the permissions of a flow operator between `sender` and `flowOperator` for `token`\"},\"getFlowOperatorDataByID(address,bytes32)\":{\"notice\":\"Get flow operator using flowOperatorId\"},\"getMaximumFlowRateFromDeposit(address,uint256)\":{\"notice\":\"Get the maximum flow rate allowed with the deposit\"},\"increaseFlowRateAllowance(address,address,int96,bytes)\":{\"notice\":\"msgSender from `ctx` increases flow rate allowance for the `flowOperator` by `addedFlowRateAllowance`\"},\"revokeFlowOperatorWithFullControl(address,address,bytes)\":{\"notice\":\"msgSender from `ctx` revokes `flowOperator` create/update/delete permissions\"},\"updateFlow(address,address,int96,bytes)\":{\"notice\":\"Update the flow rate between ctx.msgSender and receiver\"},\"updateFlowByOperator(address,address,address,int96,bytes)\":{\"notice\":\"Update a flow between sender and receiver\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":\"IConstantFlowAgreementV1\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590\",\"dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq\"]},\"project:/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06\",\"dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1\",\"dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >= 0.8.11;\n\nimport { ISuperAgreement } from \"../superfluid/ISuperAgreement.sol\";\nimport { ISuperfluidToken } from \"../superfluid/ISuperfluidToken.sol\";\n\n/**\n * @title Constant Flow Agreement interface\n * @author Superfluid\n */\nabstract contract IConstantFlowAgreementV1 is ISuperAgreement {\n\n    /**************************************************************************\n     * Errors\n     *************************************************************************/\n    error CFA_ACL_NO_SENDER_CREATE();               // 0x4b993136\n    error CFA_ACL_NO_SENDER_UPDATE();               // 0xedfa0d3b\n    error CFA_ACL_OPERATOR_NO_CREATE_PERMISSIONS(); // 0xa3eab6ac\n    error CFA_ACL_OPERATOR_NO_UPDATE_PERMISSIONS(); // 0xac434b5f\n    error CFA_ACL_OPERATOR_NO_DELETE_PERMISSIONS(); // 0xe30f1bff\n    error CFA_ACL_FLOW_RATE_ALLOWANCE_EXCEEDED();   // 0xa0645c1f\n    error CFA_ACL_UNCLEAN_PERMISSIONS();            // 0x7939d66c\n    error CFA_ACL_NO_SENDER_FLOW_OPERATOR();        // 0xb0ed394d\n    error CFA_ACL_NO_NEGATIVE_ALLOWANCE();          // 0x86e0377d\n    error CFA_FLOW_ALREADY_EXISTS();                // 0x801b6863\n    error CFA_FLOW_DOES_NOT_EXIST();                // 0x5a32bf24\n    error CFA_INSUFFICIENT_BALANCE();               // 0xea76c9b3\n    error CFA_ZERO_ADDRESS_SENDER();                // 0x1ce9b067\n    error CFA_ZERO_ADDRESS_RECEIVER();              // 0x78e02b2a\n    error CFA_HOOK_OUT_OF_GAS();                    // 0x9f76430b\n    error CFA_DEPOSIT_TOO_BIG();                    // 0x752c2b9c\n    error CFA_FLOW_RATE_TOO_BIG();                  // 0x0c9c55c1\n    error CFA_NON_CRITICAL_SENDER();                // 0xce11b5d1\n    error CFA_INVALID_FLOW_RATE();                  // 0x91acad16\n    error CFA_NO_SELF_FLOW();                       // 0xa47338ef\n\n    /// @dev ISuperAgreement.agreementType implementation\n    function agreementType() external override pure returns (bytes32) {\n        return keccak256(\"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\");\n    }\n\n    /**\n     * @notice Get the maximum flow rate allowed with the deposit\n     * @dev The deposit is clipped and rounded down\n     * @param deposit Deposit amount used for creating the flow\n     * @return flowRate The maximum flow rate\n     */\n    function getMaximumFlowRateFromDeposit(\n        ISuperfluidToken token,\n        uint256 deposit)\n        external view virtual\n        returns (int96 flowRate);\n\n    /**\n     * @notice Get the deposit required for creating the flow\n     * @dev Calculates the deposit based on the liquidationPeriod and flowRate\n     * @param flowRate Flow rate to be tested\n     * @return deposit The deposit amount based on flowRate and liquidationPeriod\n     * @custom:note\n     * - if calculated deposit (flowRate * liquidationPeriod) is less\n     *   than the minimum deposit, we use the minimum deposit otherwise\n     *   we use the calculated deposit\n     */\n    function getDepositRequiredForFlowRate(\n        ISuperfluidToken token,\n        int96 flowRate)\n        external view virtual\n        returns (uint256 deposit);\n\n    /**\n     * @dev Returns whether it is the patrician period based on host.getNow()\n     * @param account The account we are interested in\n     * @return isCurrentlyPatricianPeriod Whether it is currently the patrician period dictated by governance\n     * @return timestamp The value of host.getNow()\n     */\n    function isPatricianPeriodNow(\n        ISuperfluidToken token,\n        address account)\n        external view virtual\n        returns (bool isCurrentlyPatricianPeriod, uint256 timestamp);\n\n    /**\n     * @dev Returns whether it is the patrician period based on timestamp\n     * @param account The account we are interested in\n     * @param timestamp The timestamp we are interested in observing the result of isPatricianPeriod\n     * @return bool Whether it is currently the patrician period dictated by governance\n     */\n    function isPatricianPeriod(\n        ISuperfluidToken token,\n        address account,\n        uint256 timestamp\n    )\n        public view virtual\n        returns (bool);\n\n    /**\n     * @dev msgSender from `ctx` updates permissions for the `flowOperator` with `flowRateAllowance`\n     * @param token Super token address\n     * @param flowOperator The permission grantee address\n     * @param permissions A bitmask representation of the granted permissions\n     * @param flowRateAllowance The flow rate allowance the `flowOperator` is granted (only goes down)\n     * @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n     */\n    function updateFlowOperatorPermissions(\n        ISuperfluidToken token,\n        address flowOperator,\n        uint8 permissions,\n        int96 flowRateAllowance,\n        bytes calldata ctx\n    )\n        external virtual\n        returns(bytes memory newCtx);\n\n    /**\n     * @notice msgSender from `ctx` increases flow rate allowance for the `flowOperator` by `addedFlowRateAllowance`\n     * @dev if `addedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE\n     * @param token Super token address\n     * @param flowOperator The permission grantee address\n     * @param addedFlowRateAllowance The flow rate allowance delta\n     * @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n     * @return newCtx The new context bytes\n     */\n    function increaseFlowRateAllowance(\n        ISuperfluidToken token,\n        address flowOperator,\n        int96 addedFlowRateAllowance,\n        bytes calldata ctx\n    ) external virtual returns(bytes memory newCtx);\n\n    /**\n     * @dev msgSender from `ctx` decreases flow rate allowance for the `flowOperator` by `subtractedFlowRateAllowance`\n     * @dev if `subtractedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE\n     * @param token Super token address\n     * @param flowOperator The permission grantee address\n     * @param subtractedFlowRateAllowance The flow rate allowance delta\n     * @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n     * @return newCtx The new context bytes\n     */\n    function decreaseFlowRateAllowance(\n        ISuperfluidToken token,\n        address flowOperator,\n        int96 subtractedFlowRateAllowance,\n        bytes calldata ctx\n    ) external virtual returns(bytes memory newCtx);\n\n    /**\n     * @dev msgSender from `ctx` increases flow rate allowance for the `flowOperator` by `addedFlowRateAllowance`\n     * @dev if `addedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE\n     * @param token Super token address\n     * @param flowOperator The permission grantee address\n     * @param permissionsToAdd A bitmask representation of the granted permissions to add as a delta\n     * @param addedFlowRateAllowance The flow rate allowance delta\n     * @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n     * @return newCtx The new context bytes\n     */\n    function increaseFlowRateAllowanceWithPermissions(\n        ISuperfluidToken token,\n        address flowOperator,\n        uint8 permissionsToAdd,\n        int96 addedFlowRateAllowance,\n        bytes calldata ctx\n    ) external virtual returns(bytes memory newCtx);\n\n    /**\n     * @dev msgSender from `ctx` decreases flow rate allowance for the `flowOperator` by `subtractedFlowRateAllowance`\n     * @dev if `subtractedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE\n     * @param token Super token address\n     * @param flowOperator The permission grantee address\n     * @param permissionsToRemove A bitmask representation of the granted permissions to remove as a delta\n     * @param subtractedFlowRateAllowance The flow rate allowance delta\n     * @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n     * @return newCtx The new context bytes\n     */\n    function decreaseFlowRateAllowanceWithPermissions(\n        ISuperfluidToken token,\n        address flowOperator,\n        uint8 permissionsToRemove,\n        int96 subtractedFlowRateAllowance,\n        bytes calldata ctx\n    ) external virtual returns(bytes memory newCtx);\n\n    /**\n     * @dev msgSender from `ctx` grants `flowOperator` all permissions with flowRateAllowance as type(int96).max\n     * @param token Super token address\n     * @param flowOperator The permission grantee address\n     * @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n     */\n    function authorizeFlowOperatorWithFullControl(\n        ISuperfluidToken token,\n        address flowOperator,\n        bytes calldata ctx\n    )\n        external virtual\n        returns(bytes memory newCtx);\n\n     /**\n     * @notice msgSender from `ctx` revokes `flowOperator` create/update/delete permissions\n     * @dev `permissions` and `flowRateAllowance` will both be set to 0\n     * @param token Super token address\n     * @param flowOperator The permission grantee address\n     * @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n     */\n    function revokeFlowOperatorWithFullControl(\n        ISuperfluidToken token,\n        address flowOperator,\n        bytes calldata ctx\n    )\n        external virtual\n        returns(bytes memory newCtx);\n\n    /**\n     * @notice Get the permissions of a flow operator between `sender` and `flowOperator` for `token`\n     * @param token Super token address\n     * @param sender The permission granter address\n     * @param flowOperator The permission grantee address\n     * @return flowOperatorId The keccak256 hash of encoded string \"flowOperator\", sender and flowOperator\n     * @return permissions A bitmask representation of the granted permissions\n     * @return flowRateAllowance The flow rate allowance the `flowOperator` is granted (only goes down)\n     */\n    function getFlowOperatorData(\n       ISuperfluidToken token,\n       address sender,\n       address flowOperator\n    )\n        public view virtual\n        returns (\n            bytes32 flowOperatorId,\n            uint8 permissions,\n            int96 flowRateAllowance\n        );\n\n    /**\n     * @notice Get flow operator using flowOperatorId\n     * @param token Super token address\n     * @param flowOperatorId The keccak256 hash of encoded string \"flowOperator\", sender and flowOperator\n     * @return permissions A bitmask representation of the granted permissions\n     * @return flowRateAllowance The flow rate allowance the `flowOperator` is granted (only goes down)\n     */\n    function getFlowOperatorDataByID(\n       ISuperfluidToken token,\n       bytes32 flowOperatorId\n    )\n        external view virtual\n        returns (\n            uint8 permissions,\n            int96 flowRateAllowance\n        );\n\n    /**\n     * @notice Create a flow betwen ctx.msgSender and receiver\n     * @dev flowId (agreementId) is the keccak256 hash of encoded sender and receiver\n     * @param token Super token address\n     * @param receiver Flow receiver address\n     * @param flowRate New flow rate in amount per second\n     * @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n     *\n     * @custom:callbacks\n     * - AgreementCreated\n     *   - agreementId - can be used in getFlowByID\n     *   - agreementData - abi.encode(address flowSender, address flowReceiver)\n     *\n     * @custom:note\n     * - A deposit is taken as safety margin for the solvency agents\n     * - A extra gas fee may be taken to pay for solvency agent liquidations\n     */\n    function createFlow(\n        ISuperfluidToken token,\n        address receiver,\n        int96 flowRate,\n        bytes calldata ctx\n    )\n        external virtual\n        returns(bytes memory newCtx);\n\n    /**\n    * @notice Create a flow between sender and receiver\n    * @dev A flow created by an approved flow operator (see above for details on callbacks)\n    * @param token Super token address\n    * @param sender Flow sender address (has granted permissions)\n    * @param receiver Flow receiver address\n    * @param flowRate New flow rate in amount per second\n    * @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n    */\n    function createFlowByOperator(\n        ISuperfluidToken token,\n        address sender,\n        address receiver,\n        int96 flowRate,\n        bytes calldata ctx\n    )\n        external virtual\n        returns(bytes memory newCtx);\n\n    /**\n     * @notice Update the flow rate between ctx.msgSender and receiver\n     * @dev flowId (agreementId) is the keccak256 hash of encoded sender and receiver\n     * @param token Super token address\n     * @param receiver Flow receiver address\n     * @param flowRate New flow rate in amount per second\n     * @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n     *\n     * @custom:callbacks\n     * - AgreementUpdated\n     *   - agreementId - can be used in getFlowByID\n     *   - agreementData - abi.encode(address flowSender, address flowReceiver)\n     *\n     * @custom:note\n     * - Only the flow sender may update the flow rate\n     * - Even if the flow rate is zero, the flow is not deleted\n     * from the system\n     * - Deposit amount will be adjusted accordingly\n     * - No new gas fee is charged\n     */\n    function updateFlow(\n        ISuperfluidToken token,\n        address receiver,\n        int96 flowRate,\n        bytes calldata ctx\n    )\n        external virtual\n        returns(bytes memory newCtx);\n\n    /**\n    * @notice Update a flow between sender and receiver\n    * @dev A flow updated by an approved flow operator (see above for details on callbacks)\n    * @param token Super token address\n    * @param sender Flow sender address (has granted permissions)\n    * @param receiver Flow receiver address\n    * @param flowRate New flow rate in amount per second\n    * @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n    */\n    function updateFlowByOperator(\n        ISuperfluidToken token,\n        address sender,\n        address receiver,\n        int96 flowRate,\n        bytes calldata ctx\n    )\n        external virtual\n        returns(bytes memory newCtx);\n\n    /**\n     * @dev Get the flow data between `sender` and `receiver` of `token`\n     * @param token Super token address\n     * @param sender Flow sender\n     * @param receiver Flow receiver\n     * @return timestamp Timestamp of when the flow is updated\n     * @return flowRate The flow rate\n     * @return deposit The amount of deposit the flow\n     * @return owedDeposit The amount of owed deposit of the flow\n     */\n    function getFlow(\n        ISuperfluidToken token,\n        address sender,\n        address receiver\n    )\n        external view virtual\n        returns (\n            uint256 timestamp,\n            int96 flowRate,\n            uint256 deposit,\n            uint256 owedDeposit\n        );\n\n    /**\n     * @notice Get flow data using agreementId\n     * @dev flowId (agreementId) is the keccak256 hash of encoded sender and receiver\n     * @param token Super token address\n     * @param agreementId The agreement ID\n     * @return timestamp Timestamp of when the flow is updated\n     * @return flowRate The flow rate\n     * @return deposit The deposit amount of the flow\n     * @return owedDeposit The owed deposit amount of the flow\n     */\n    function getFlowByID(\n       ISuperfluidToken token,\n       bytes32 agreementId\n    )\n        external view virtual\n        returns (\n            uint256 timestamp,\n            int96 flowRate,\n            uint256 deposit,\n            uint256 owedDeposit\n        );\n\n    /**\n     * @dev Get the aggregated flow info of the account\n     * @param token Super token address\n     * @param account Account for the query\n     * @return timestamp Timestamp of when a flow was last updated for account\n     * @return flowRate The net flow rate of token for account\n     * @return deposit The sum of all deposits for account's flows\n     * @return owedDeposit The sum of all owed deposits for account's flows\n     */\n    function getAccountFlowInfo(\n        ISuperfluidToken token,\n        address account\n    )\n        external view virtual\n        returns (\n            uint256 timestamp,\n            int96 flowRate,\n            uint256 deposit,\n            uint256 owedDeposit);\n\n    /**\n     * @dev Get the net flow rate of the account\n     * @param token Super token address\n     * @param account Account for the query\n     * @return flowRate Net flow rate\n     */\n    function getNetFlow(\n        ISuperfluidToken token,\n        address account\n    )\n        external view virtual\n        returns (int96 flowRate);\n\n    /**\n     * @notice Delete the flow between sender and receiver\n     * @dev flowId (agreementId) is the keccak256 hash of encoded sender and receiver\n     * @param token Super token address\n     * @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n     * @param receiver Flow receiver address\n     *\n     * @custom:callbacks\n     * - AgreementTerminated\n     *   - agreementId - can be used in getFlowByID\n     *   - agreementData - abi.encode(address flowSender, address flowReceiver)\n     *\n     * @custom:note\n     * - Both flow sender and receiver may delete the flow\n     * - If Sender account is insolvent or in critical state, a solvency agent may\n     *   also terminate the agreement\n     * - Gas fee may be returned to the sender\n     */\n    function deleteFlow(\n        ISuperfluidToken token,\n        address sender,\n        address receiver,\n        bytes calldata ctx\n    )\n        external virtual\n        returns(bytes memory newCtx);\n\n    /**\n     * @notice Delete the flow between sender and receiver\n     * @dev A flow deleted by an approved flow operator (see above for details on callbacks)\n     * @param token Super token address\n     * @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n     * @param receiver Flow receiver address\n     */\n    function deleteFlowByOperator(\n        ISuperfluidToken token,\n        address sender,\n        address receiver,\n        bytes calldata ctx\n    )\n        external virtual\n        returns(bytes memory newCtx);\n\n    /**\n     * @dev Flow operator updated event\n     * @param token Super token address\n     * @param sender Flow sender address\n     * @param flowOperator Flow operator address\n     * @param permissions Octo bitmask representation of permissions\n     * @param flowRateAllowance The flow rate allowance the `flowOperator` is granted (only goes down)\n     */\n    event FlowOperatorUpdated(\n        ISuperfluidToken indexed token,\n        address indexed sender,\n        address indexed flowOperator,\n        uint8 permissions,\n        int96 flowRateAllowance\n    );\n\n    /**\n     * @dev Flow updated event\n     * @param token Super token address\n     * @param sender Flow sender address\n     * @param receiver Flow recipient address\n     * @param flowRate Flow rate in amount per second for this flow\n     * @param totalSenderFlowRate Total flow rate in amount per second for the sender\n     * @param totalReceiverFlowRate Total flow rate in amount per second for the receiver\n     * @param userData The user provided data\n     *\n     */\n    event FlowUpdated(\n        ISuperfluidToken indexed token,\n        address indexed sender,\n        address indexed receiver,\n        int96 flowRate,\n        int256 totalSenderFlowRate,\n        int256 totalReceiverFlowRate,\n        bytes userData\n    );\n\n    /**\n     * @dev Flow updated extension event\n     * @param flowOperator Flow operator address - the Context.msgSender\n     * @param deposit The deposit amount for the stream\n     */\n    event FlowUpdatedExtension(\n        address indexed flowOperator,\n        uint256 deposit\n    );\n}\n",
  "sourcePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
    "exportedSymbols": {
      "IConstantFlowAgreementV1": [
        35892
      ],
      "ISuperAgreement": [
        37553
      ],
      "ISuperfluidToken": [
        39368
      ]
    },
    "id": 35893,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 35450,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:26:64"
      },
      {
        "absolutePath": "project:/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "file": "../superfluid/ISuperAgreement.sol",
        "id": 35452,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 35893,
        "sourceUnit": 37554,
        "src": "60:68:64",
        "symbolAliases": [
          {
            "foreign": {
              "id": 35451,
              "name": "ISuperAgreement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37553,
              "src": "69:15:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/superfluid/ISuperfluidToken.sol",
        "file": "../superfluid/ISuperfluidToken.sol",
        "id": 35454,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 35893,
        "sourceUnit": 39369,
        "src": "129:70:64",
        "symbolAliases": [
          {
            "foreign": {
              "id": 35453,
              "name": "ISuperfluidToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39368,
              "src": "138:16:64",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 35456,
              "name": "ISuperAgreement",
              "nameLocations": [
                "321:15:64"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37553,
              "src": "321:15:64"
            },
            "id": 35457,
            "nodeType": "InheritanceSpecifier",
            "src": "321:15:64"
          }
        ],
        "canonicalName": "IConstantFlowAgreementV1",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 35455,
          "nodeType": "StructuredDocumentation",
          "src": "201:73:64",
          "text": " @title Constant Flow Agreement interface\n @author Superfluid"
        },
        "fullyImplemented": false,
        "id": 35892,
        "linearizedBaseContracts": [
          35892,
          37553
        ],
        "name": "IConstantFlowAgreementV1",
        "nameLocation": "293:24:64",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "errorSelector": "4b993136",
            "id": 35459,
            "name": "CFA_ACL_NO_SENDER_CREATE",
            "nameLocation": "524:24:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "548:2:64"
            },
            "src": "518:33:64"
          },
          {
            "errorSelector": "edfa0d3b",
            "id": 35461,
            "name": "CFA_ACL_NO_SENDER_UPDATE",
            "nameLocation": "590:24:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "614:2:64"
            },
            "src": "584:33:64"
          },
          {
            "errorSelector": "a3eab6ac",
            "id": 35463,
            "name": "CFA_ACL_OPERATOR_NO_CREATE_PERMISSIONS",
            "nameLocation": "656:38:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "694:2:64"
            },
            "src": "650:47:64"
          },
          {
            "errorSelector": "ac434b5f",
            "id": 35465,
            "name": "CFA_ACL_OPERATOR_NO_UPDATE_PERMISSIONS",
            "nameLocation": "722:38:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "760:2:64"
            },
            "src": "716:47:64"
          },
          {
            "errorSelector": "e30f1bff",
            "id": 35467,
            "name": "CFA_ACL_OPERATOR_NO_DELETE_PERMISSIONS",
            "nameLocation": "788:38:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "826:2:64"
            },
            "src": "782:47:64"
          },
          {
            "errorSelector": "a0645c1f",
            "id": 35469,
            "name": "CFA_ACL_FLOW_RATE_ALLOWANCE_EXCEEDED",
            "nameLocation": "854:36:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "890:2:64"
            },
            "src": "848:45:64"
          },
          {
            "errorSelector": "7939d66c",
            "id": 35471,
            "name": "CFA_ACL_UNCLEAN_PERMISSIONS",
            "nameLocation": "920:27:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:2:64"
            },
            "src": "914:36:64"
          },
          {
            "errorSelector": "b0ed394d",
            "id": 35473,
            "name": "CFA_ACL_NO_SENDER_FLOW_OPERATOR",
            "nameLocation": "986:31:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1017:2:64"
            },
            "src": "980:40:64"
          },
          {
            "errorSelector": "86e0377d",
            "id": 35475,
            "name": "CFA_ACL_NO_NEGATIVE_ALLOWANCE",
            "nameLocation": "1052:29:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1081:2:64"
            },
            "src": "1046:38:64"
          },
          {
            "errorSelector": "801b6863",
            "id": 35477,
            "name": "CFA_FLOW_ALREADY_EXISTS",
            "nameLocation": "1118:23:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1141:2:64"
            },
            "src": "1112:32:64"
          },
          {
            "errorSelector": "5a32bf24",
            "id": 35479,
            "name": "CFA_FLOW_DOES_NOT_EXIST",
            "nameLocation": "1184:23:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1207:2:64"
            },
            "src": "1178:32:64"
          },
          {
            "errorSelector": "ea76c9b3",
            "id": 35481,
            "name": "CFA_INSUFFICIENT_BALANCE",
            "nameLocation": "1250:24:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1274:2:64"
            },
            "src": "1244:33:64"
          },
          {
            "errorSelector": "1ce9b067",
            "id": 35483,
            "name": "CFA_ZERO_ADDRESS_SENDER",
            "nameLocation": "1316:23:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1339:2:64"
            },
            "src": "1310:32:64"
          },
          {
            "errorSelector": "78e02b2a",
            "id": 35485,
            "name": "CFA_ZERO_ADDRESS_RECEIVER",
            "nameLocation": "1382:25:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1407:2:64"
            },
            "src": "1376:34:64"
          },
          {
            "errorSelector": "9f76430b",
            "id": 35487,
            "name": "CFA_HOOK_OUT_OF_GAS",
            "nameLocation": "1448:19:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1467:2:64"
            },
            "src": "1442:28:64"
          },
          {
            "errorSelector": "752c2b9c",
            "id": 35489,
            "name": "CFA_DEPOSIT_TOO_BIG",
            "nameLocation": "1514:19:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1533:2:64"
            },
            "src": "1508:28:64"
          },
          {
            "errorSelector": "0c9c55c1",
            "id": 35491,
            "name": "CFA_FLOW_RATE_TOO_BIG",
            "nameLocation": "1580:21:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1601:2:64"
            },
            "src": "1574:30:64"
          },
          {
            "errorSelector": "ce11b5d1",
            "id": 35493,
            "name": "CFA_NON_CRITICAL_SENDER",
            "nameLocation": "1646:23:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1669:2:64"
            },
            "src": "1640:32:64"
          },
          {
            "errorSelector": "91acad16",
            "id": 35495,
            "name": "CFA_INVALID_FLOW_RATE",
            "nameLocation": "1712:21:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1733:2:64"
            },
            "src": "1706:30:64"
          },
          {
            "errorSelector": "a47338ef",
            "id": 35497,
            "name": "CFA_NO_SELF_FLOW",
            "nameLocation": "1778:16:64",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 35496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1794:2:64"
            },
            "src": "1772:25:64"
          },
          {
            "baseFunctions": [
              37535
            ],
            "body": {
              "id": 35508,
              "nodeType": "Block",
              "src": "1963:95:64",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e61677265656d656e74732e436f6e7374616e74466c6f7741677265656d656e742e7631",
                        "id": 35505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1990:60:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3",
                          "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\""
                        },
                        "value": "org.superfluid-finance.agreements.ConstantFlowAgreement.v1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3",
                          "typeString": "literal_string \"org.superfluid-finance.agreements.ConstantFlowAgreement.v1\""
                        }
                      ],
                      "id": 35504,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1980:9:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 35506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1980:71:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 35503,
                  "id": 35507,
                  "nodeType": "Return",
                  "src": "1973:78:64"
                }
              ]
            },
            "documentation": {
              "id": 35498,
              "nodeType": "StructuredDocumentation",
              "src": "1839:53:64",
              "text": "@dev ISuperAgreement.agreementType implementation"
            },
            "functionSelector": "7730599e",
            "id": 35509,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "agreementType",
            "nameLocation": "1906:13:64",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 35500,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1931:8:64"
            },
            "parameters": {
              "id": 35499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1919:2:64"
            },
            "returnParameters": {
              "id": 35503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35502,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35509,
                  "src": "1954:7:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35501,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1954:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1953:9:64"
            },
            "scope": 35892,
            "src": "1897:161:64",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35510,
              "nodeType": "StructuredDocumentation",
              "src": "2064:239:64",
              "text": " @notice Get the maximum flow rate allowed with the deposit\n @dev The deposit is clipped and rounded down\n @param deposit Deposit amount used for creating the flow\n @return flowRate The maximum flow rate"
            },
            "functionSelector": "0602f7db",
            "id": 35520,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getMaximumFlowRateFromDeposit",
            "nameLocation": "2317:29:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35513,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2373:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35520,
                  "src": "2356:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35512,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35511,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "2356:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "2356:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "2356:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35515,
                  "mutability": "mutable",
                  "name": "deposit",
                  "nameLocation": "2396:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35520,
                  "src": "2388:15:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2388:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2346:58:64"
            },
            "returnParameters": {
              "id": 35519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35518,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "2458:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35520,
                  "src": "2452:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35517,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2452:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2451:16:64"
            },
            "scope": 35892,
            "src": "2308:160:64",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35521,
              "nodeType": "StructuredDocumentation",
              "src": "2474:481:64",
              "text": " @notice Get the deposit required for creating the flow\n @dev Calculates the deposit based on the liquidationPeriod and flowRate\n @param flowRate Flow rate to be tested\n @return deposit The deposit amount based on flowRate and liquidationPeriod\n @custom:note\n - if calculated deposit (flowRate * liquidationPeriod) is less\n   than the minimum deposit, we use the minimum deposit otherwise\n   we use the calculated deposit"
            },
            "functionSelector": "8d997f6e",
            "id": 35531,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getDepositRequiredForFlowRate",
            "nameLocation": "2969:29:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35524,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3025:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35531,
                  "src": "3008:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35523,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35522,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "3008:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "3008:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "3008:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35526,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "3046:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35531,
                  "src": "3040:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35525,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3040:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2998:57:64"
            },
            "returnParameters": {
              "id": 35530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35529,
                  "mutability": "mutable",
                  "name": "deposit",
                  "nameLocation": "3111:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35531,
                  "src": "3103:15:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3103:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3102:17:64"
            },
            "scope": 35892,
            "src": "2960:160:64",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35532,
              "nodeType": "StructuredDocumentation",
              "src": "3126:306:64",
              "text": " @dev Returns whether it is the patrician period based on host.getNow()\n @param account The account we are interested in\n @return isCurrentlyPatricianPeriod Whether it is currently the patrician period dictated by governance\n @return timestamp The value of host.getNow()"
            },
            "functionSelector": "4fe9c291",
            "id": 35544,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isPatricianPeriodNow",
            "nameLocation": "3446:20:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35535,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3493:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35544,
                  "src": "3476:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35534,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35533,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "3476:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "3476:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "3476:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35537,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3516:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35544,
                  "src": "3508:15:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3508:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3466:58:64"
            },
            "returnParameters": {
              "id": 35543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35540,
                  "mutability": "mutable",
                  "name": "isCurrentlyPatricianPeriod",
                  "nameLocation": "3577:26:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35544,
                  "src": "3572:31:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35539,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3572:4:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35542,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3613:9:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35544,
                  "src": "3605:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3605:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3571:52:64"
            },
            "scope": 35892,
            "src": "3437:187:64",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35545,
              "nodeType": "StructuredDocumentation",
              "src": "3630:329:64",
              "text": " @dev Returns whether it is the patrician period based on timestamp\n @param account The account we are interested in\n @param timestamp The timestamp we are interested in observing the result of isPatricianPeriod\n @return bool Whether it is currently the patrician period dictated by governance"
            },
            "functionSelector": "4b839e0b",
            "id": 35557,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isPatricianPeriod",
            "nameLocation": "3973:17:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35548,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4017:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35557,
                  "src": "4000:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35547,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35546,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "4000:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "4000:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "4000:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35550,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4040:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35557,
                  "src": "4032:15:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35549,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4032:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35552,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "4065:9:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35557,
                  "src": "4057:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35551,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4057:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3990:90:64"
            },
            "returnParameters": {
              "id": 35556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35555,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 35557,
                  "src": "4126:4:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 35554,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4126:4:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4125:6:64"
            },
            "scope": 35892,
            "src": "3964:168:64",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 35558,
              "nodeType": "StructuredDocumentation",
              "src": "4138:464:64",
              "text": " @dev msgSender from `ctx` updates permissions for the `flowOperator` with `flowRateAllowance`\n @param token Super token address\n @param flowOperator The permission grantee address\n @param permissions A bitmask representation of the granted permissions\n @param flowRateAllowance The flow rate allowance the `flowOperator` is granted (only goes down)\n @param ctx Context bytes (see ISuperfluid.sol for Context struct)"
            },
            "functionSelector": "811b3d40",
            "id": 35574,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateFlowOperatorPermissions",
            "nameLocation": "4616:29:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35561,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4672:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35574,
                  "src": "4655:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35560,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35559,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "4655:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "4655:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "4655:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35563,
                  "mutability": "mutable",
                  "name": "flowOperator",
                  "nameLocation": "4695:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35574,
                  "src": "4687:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4687:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35565,
                  "mutability": "mutable",
                  "name": "permissions",
                  "nameLocation": "4723:11:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35574,
                  "src": "4717:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 35564,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4717:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35567,
                  "mutability": "mutable",
                  "name": "flowRateAllowance",
                  "nameLocation": "4750:17:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35574,
                  "src": "4744:23:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35566,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "4744:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35569,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nameLocation": "4792:3:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35574,
                  "src": "4777:18:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35568,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4777:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4645:156:64"
            },
            "returnParameters": {
              "id": 35573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35572,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nameLocation": "4856:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35574,
                  "src": "4843:19:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35571,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4843:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4842:21:64"
            },
            "scope": 35892,
            "src": "4607:257:64",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35575,
              "nodeType": "StructuredDocumentation",
              "src": "4870:508:64",
              "text": " @notice msgSender from `ctx` increases flow rate allowance for the `flowOperator` by `addedFlowRateAllowance`\n @dev if `addedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE\n @param token Super token address\n @param flowOperator The permission grantee address\n @param addedFlowRateAllowance The flow rate allowance delta\n @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n @return newCtx The new context bytes"
            },
            "functionSelector": "ac5f5d00",
            "id": 35589,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "increaseFlowRateAllowance",
            "nameLocation": "5392:25:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35578,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5444:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35589,
                  "src": "5427:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35577,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35576,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "5427:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "5427:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "5427:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35580,
                  "mutability": "mutable",
                  "name": "flowOperator",
                  "nameLocation": "5467:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35589,
                  "src": "5459:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5459:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35582,
                  "mutability": "mutable",
                  "name": "addedFlowRateAllowance",
                  "nameLocation": "5495:22:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35589,
                  "src": "5489:28:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35581,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "5489:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35584,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nameLocation": "5542:3:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35589,
                  "src": "5527:18:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35583,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5527:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5417:134:64"
            },
            "returnParameters": {
              "id": 35588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35587,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nameLocation": "5590:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35589,
                  "src": "5577:19:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35586,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5577:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5576:21:64"
            },
            "scope": 35892,
            "src": "5383:215:64",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35590,
              "nodeType": "StructuredDocumentation",
              "src": "5604:520:64",
              "text": " @dev msgSender from `ctx` decreases flow rate allowance for the `flowOperator` by `subtractedFlowRateAllowance`\n @dev if `subtractedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE\n @param token Super token address\n @param flowOperator The permission grantee address\n @param subtractedFlowRateAllowance The flow rate allowance delta\n @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n @return newCtx The new context bytes"
            },
            "functionSelector": "5f51fb23",
            "id": 35604,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseFlowRateAllowance",
            "nameLocation": "6138:25:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35593,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6190:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35604,
                  "src": "6173:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35592,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35591,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "6173:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "6173:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "6173:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35595,
                  "mutability": "mutable",
                  "name": "flowOperator",
                  "nameLocation": "6213:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35604,
                  "src": "6205:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6205:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35597,
                  "mutability": "mutable",
                  "name": "subtractedFlowRateAllowance",
                  "nameLocation": "6241:27:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35604,
                  "src": "6235:33:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35596,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "6235:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35599,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nameLocation": "6293:3:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35604,
                  "src": "6278:18:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35598,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6278:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6163:139:64"
            },
            "returnParameters": {
              "id": 35603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35602,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nameLocation": "6341:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35604,
                  "src": "6328:19:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35601,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6328:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6327:21:64"
            },
            "scope": 35892,
            "src": "6129:220:64",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35605,
              "nodeType": "StructuredDocumentation",
              "src": "6355:606:64",
              "text": " @dev msgSender from `ctx` increases flow rate allowance for the `flowOperator` by `addedFlowRateAllowance`\n @dev if `addedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE\n @param token Super token address\n @param flowOperator The permission grantee address\n @param permissionsToAdd A bitmask representation of the granted permissions to add as a delta\n @param addedFlowRateAllowance The flow rate allowance delta\n @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n @return newCtx The new context bytes"
            },
            "functionSelector": "f31f88f0",
            "id": 35621,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "increaseFlowRateAllowanceWithPermissions",
            "nameLocation": "6975:40:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35608,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7042:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35621,
                  "src": "7025:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35607,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35606,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "7025:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "7025:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "7025:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35610,
                  "mutability": "mutable",
                  "name": "flowOperator",
                  "nameLocation": "7065:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35621,
                  "src": "7057:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7057:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35612,
                  "mutability": "mutable",
                  "name": "permissionsToAdd",
                  "nameLocation": "7093:16:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35621,
                  "src": "7087:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 35611,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7087:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35614,
                  "mutability": "mutable",
                  "name": "addedFlowRateAllowance",
                  "nameLocation": "7125:22:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35621,
                  "src": "7119:28:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35613,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "7119:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35616,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nameLocation": "7172:3:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35621,
                  "src": "7157:18:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35615,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7157:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7015:166:64"
            },
            "returnParameters": {
              "id": 35620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35619,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nameLocation": "7220:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35621,
                  "src": "7207:19:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35618,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7207:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7206:21:64"
            },
            "scope": 35892,
            "src": "6966:262:64",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35622,
              "nodeType": "StructuredDocumentation",
              "src": "7234:627:64",
              "text": " @dev msgSender from `ctx` decreases flow rate allowance for the `flowOperator` by `subtractedFlowRateAllowance`\n @dev if `subtractedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE\n @param token Super token address\n @param flowOperator The permission grantee address\n @param permissionsToRemove A bitmask representation of the granted permissions to remove as a delta\n @param subtractedFlowRateAllowance The flow rate allowance delta\n @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n @return newCtx The new context bytes"
            },
            "functionSelector": "da6b5f30",
            "id": 35638,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseFlowRateAllowanceWithPermissions",
            "nameLocation": "7875:40:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35625,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7942:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35638,
                  "src": "7925:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35624,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35623,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "7925:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "7925:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "7925:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35627,
                  "mutability": "mutable",
                  "name": "flowOperator",
                  "nameLocation": "7965:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35638,
                  "src": "7957:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35626,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7957:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35629,
                  "mutability": "mutable",
                  "name": "permissionsToRemove",
                  "nameLocation": "7993:19:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35638,
                  "src": "7987:25:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 35628,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7987:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35631,
                  "mutability": "mutable",
                  "name": "subtractedFlowRateAllowance",
                  "nameLocation": "8028:27:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35638,
                  "src": "8022:33:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35630,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "8022:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35633,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nameLocation": "8080:3:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35638,
                  "src": "8065:18:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35632,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8065:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7915:174:64"
            },
            "returnParameters": {
              "id": 35637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35636,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nameLocation": "8128:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35638,
                  "src": "8115:19:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35635,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8115:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8114:21:64"
            },
            "scope": 35892,
            "src": "7866:270:64",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35639,
              "nodeType": "StructuredDocumentation",
              "src": "8142:295:64",
              "text": " @dev msgSender from `ctx` grants `flowOperator` all permissions with flowRateAllowance as type(int96).max\n @param token Super token address\n @param flowOperator The permission grantee address\n @param ctx Context bytes (see ISuperfluid.sol for Context struct)"
            },
            "functionSelector": "54b770e3",
            "id": 35651,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "authorizeFlowOperatorWithFullControl",
            "nameLocation": "8451:36:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35642,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8514:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35651,
                  "src": "8497:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35641,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35640,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "8497:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "8497:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "8497:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35644,
                  "mutability": "mutable",
                  "name": "flowOperator",
                  "nameLocation": "8537:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35651,
                  "src": "8529:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8529:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35646,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nameLocation": "8574:3:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35651,
                  "src": "8559:18:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35645,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8559:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8487:96:64"
            },
            "returnParameters": {
              "id": 35650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35649,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nameLocation": "8638:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35651,
                  "src": "8625:19:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35648,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8625:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8624:21:64"
            },
            "scope": 35892,
            "src": "8442:204:64",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35652,
              "nodeType": "StructuredDocumentation",
              "src": "8653:346:64",
              "text": " @notice msgSender from `ctx` revokes `flowOperator` create/update/delete permissions\n @dev `permissions` and `flowRateAllowance` will both be set to 0\n @param token Super token address\n @param flowOperator The permission grantee address\n @param ctx Context bytes (see ISuperfluid.sol for Context struct)"
            },
            "functionSelector": "062e56ec",
            "id": 35664,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revokeFlowOperatorWithFullControl",
            "nameLocation": "9013:33:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35655,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "9073:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35664,
                  "src": "9056:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35654,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35653,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "9056:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "9056:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "9056:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35657,
                  "mutability": "mutable",
                  "name": "flowOperator",
                  "nameLocation": "9096:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35664,
                  "src": "9088:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9088:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35659,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nameLocation": "9133:3:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35664,
                  "src": "9118:18:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35658,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9118:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9046:96:64"
            },
            "returnParameters": {
              "id": 35663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35662,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nameLocation": "9197:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35664,
                  "src": "9184:19:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35661,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9184:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9183:21:64"
            },
            "scope": 35892,
            "src": "9004:201:64",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35665,
              "nodeType": "StructuredDocumentation",
              "src": "9211:553:64",
              "text": " @notice Get the permissions of a flow operator between `sender` and `flowOperator` for `token`\n @param token Super token address\n @param sender The permission granter address\n @param flowOperator The permission grantee address\n @return flowOperatorId The keccak256 hash of encoded string \"flowOperator\", sender and flowOperator\n @return permissions A bitmask representation of the granted permissions\n @return flowRateAllowance The flow rate allowance the `flowOperator` is granted (only goes down)"
            },
            "functionSelector": "00422bbe",
            "id": 35681,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getFlowOperatorData",
            "nameLocation": "9778:19:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35668,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "9823:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35681,
                  "src": "9806:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35667,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35666,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "9806:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "9806:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "9806:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35670,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "9845:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35681,
                  "src": "9837:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9837:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35672,
                  "mutability": "mutable",
                  "name": "flowOperator",
                  "nameLocation": "9868:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35681,
                  "src": "9860:20:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9860:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9797:89:64"
            },
            "returnParameters": {
              "id": 35680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35675,
                  "mutability": "mutable",
                  "name": "flowOperatorId",
                  "nameLocation": "9953:14:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35681,
                  "src": "9945:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35674,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9945:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35677,
                  "mutability": "mutable",
                  "name": "permissions",
                  "nameLocation": "9987:11:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35681,
                  "src": "9981:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 35676,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "9981:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35679,
                  "mutability": "mutable",
                  "name": "flowRateAllowance",
                  "nameLocation": "10018:17:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35681,
                  "src": "10012:23:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35678,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "10012:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9931:114:64"
            },
            "scope": 35892,
            "src": "9769:277:64",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 35682,
              "nodeType": "StructuredDocumentation",
              "src": "10052:394:64",
              "text": " @notice Get flow operator using flowOperatorId\n @param token Super token address\n @param flowOperatorId The keccak256 hash of encoded string \"flowOperator\", sender and flowOperator\n @return permissions A bitmask representation of the granted permissions\n @return flowRateAllowance The flow rate allowance the `flowOperator` is granted (only goes down)"
            },
            "functionSelector": "09d256ef",
            "id": 35694,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getFlowOperatorDataByID",
            "nameLocation": "10460:23:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35685,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "10509:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35694,
                  "src": "10492:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35684,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35683,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "10492:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "10492:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "10492:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35687,
                  "mutability": "mutable",
                  "name": "flowOperatorId",
                  "nameLocation": "10531:14:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35694,
                  "src": "10523:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35686,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10523:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10483:68:64"
            },
            "returnParameters": {
              "id": 35693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35690,
                  "mutability": "mutable",
                  "name": "permissions",
                  "nameLocation": "10618:11:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35694,
                  "src": "10612:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 35689,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "10612:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35692,
                  "mutability": "mutable",
                  "name": "flowRateAllowance",
                  "nameLocation": "10649:17:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35694,
                  "src": "10643:23:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35691,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "10643:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10598:78:64"
            },
            "scope": 35892,
            "src": "10451:226:64",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35695,
              "nodeType": "StructuredDocumentation",
              "src": "10683:739:64",
              "text": " @notice Create a flow betwen ctx.msgSender and receiver\n @dev flowId (agreementId) is the keccak256 hash of encoded sender and receiver\n @param token Super token address\n @param receiver Flow receiver address\n @param flowRate New flow rate in amount per second\n @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n @custom:callbacks\n - AgreementCreated\n   - agreementId - can be used in getFlowByID\n   - agreementData - abi.encode(address flowSender, address flowReceiver)\n @custom:note\n - A deposit is taken as safety margin for the solvency agents\n - A extra gas fee may be taken to pay for solvency agent liquidations"
            },
            "functionSelector": "62fc305e",
            "id": 35709,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createFlow",
            "nameLocation": "11436:10:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35698,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "11473:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35709,
                  "src": "11456:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35697,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35696,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "11456:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "11456:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "11456:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35700,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "11496:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35709,
                  "src": "11488:16:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35699,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11488:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35702,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "11520:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35709,
                  "src": "11514:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35701,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "11514:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35704,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nameLocation": "11553:3:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35709,
                  "src": "11538:18:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35703,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11538:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11446:116:64"
            },
            "returnParameters": {
              "id": 35708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35707,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nameLocation": "11617:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35709,
                  "src": "11604:19:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35706,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11604:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11603:21:64"
            },
            "scope": 35892,
            "src": "11427:198:64",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35710,
              "nodeType": "StructuredDocumentation",
              "src": "11631:436:64",
              "text": " @notice Create a flow between sender and receiver\n @dev A flow created by an approved flow operator (see above for details on callbacks)\n @param token Super token address\n @param sender Flow sender address (has granted permissions)\n @param receiver Flow receiver address\n @param flowRate New flow rate in amount per second\n @param ctx Context bytes (see ISuperfluid.sol for Context struct)"
            },
            "functionSelector": "94229ecb",
            "id": 35726,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createFlowByOperator",
            "nameLocation": "12081:20:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35713,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "12128:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35726,
                  "src": "12111:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35712,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35711,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "12111:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "12111:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "12111:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35715,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "12151:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35726,
                  "src": "12143:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12143:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35717,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "12175:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35726,
                  "src": "12167:16:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35716,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12167:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35719,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "12199:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35726,
                  "src": "12193:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35718,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "12193:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35721,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nameLocation": "12232:3:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35726,
                  "src": "12217:18:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35720,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12217:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12101:140:64"
            },
            "returnParameters": {
              "id": 35725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35724,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nameLocation": "12296:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35726,
                  "src": "12283:19:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35723,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12283:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12282:21:64"
            },
            "scope": 35892,
            "src": "12072:232:64",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35727,
              "nodeType": "StructuredDocumentation",
              "src": "12310:831:64",
              "text": " @notice Update the flow rate between ctx.msgSender and receiver\n @dev flowId (agreementId) is the keccak256 hash of encoded sender and receiver\n @param token Super token address\n @param receiver Flow receiver address\n @param flowRate New flow rate in amount per second\n @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n @custom:callbacks\n - AgreementUpdated\n   - agreementId - can be used in getFlowByID\n   - agreementData - abi.encode(address flowSender, address flowReceiver)\n @custom:note\n - Only the flow sender may update the flow rate\n - Even if the flow rate is zero, the flow is not deleted\n from the system\n - Deposit amount will be adjusted accordingly\n - No new gas fee is charged"
            },
            "functionSelector": "50209a62",
            "id": 35741,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateFlow",
            "nameLocation": "13155:10:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35730,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "13192:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35741,
                  "src": "13175:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35729,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35728,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "13175:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "13175:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "13175:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35732,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "13215:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35741,
                  "src": "13207:16:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13207:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35734,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "13239:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35741,
                  "src": "13233:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35733,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "13233:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35736,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nameLocation": "13272:3:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35741,
                  "src": "13257:18:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35735,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13257:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13165:116:64"
            },
            "returnParameters": {
              "id": 35740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35739,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nameLocation": "13336:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35741,
                  "src": "13323:19:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35738,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13323:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13322:21:64"
            },
            "scope": 35892,
            "src": "13146:198:64",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35742,
              "nodeType": "StructuredDocumentation",
              "src": "13350:436:64",
              "text": " @notice Update a flow between sender and receiver\n @dev A flow updated by an approved flow operator (see above for details on callbacks)\n @param token Super token address\n @param sender Flow sender address (has granted permissions)\n @param receiver Flow receiver address\n @param flowRate New flow rate in amount per second\n @param ctx Context bytes (see ISuperfluid.sol for Context struct)"
            },
            "functionSelector": "354b9590",
            "id": 35758,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateFlowByOperator",
            "nameLocation": "13800:20:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35745,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "13847:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35758,
                  "src": "13830:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35744,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35743,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "13830:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "13830:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "13830:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35747,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "13870:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35758,
                  "src": "13862:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13862:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35749,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "13894:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35758,
                  "src": "13886:16:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13886:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35751,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "13918:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35758,
                  "src": "13912:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35750,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "13912:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35753,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nameLocation": "13951:3:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35758,
                  "src": "13936:18:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35752,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13936:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13820:140:64"
            },
            "returnParameters": {
              "id": 35757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35756,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nameLocation": "14015:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35758,
                  "src": "14002:19:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35755,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14002:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14001:21:64"
            },
            "scope": 35892,
            "src": "13791:232:64",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35759,
              "nodeType": "StructuredDocumentation",
              "src": "14029:415:64",
              "text": " @dev Get the flow data between `sender` and `receiver` of `token`\n @param token Super token address\n @param sender Flow sender\n @param receiver Flow receiver\n @return timestamp Timestamp of when the flow is updated\n @return flowRate The flow rate\n @return deposit The amount of deposit the flow\n @return owedDeposit The amount of owed deposit of the flow"
            },
            "functionSelector": "e6a1e888",
            "id": 35777,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getFlow",
            "nameLocation": "14458:7:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35762,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "14492:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35777,
                  "src": "14475:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35761,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35760,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "14475:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "14475:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "14475:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35764,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "14515:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35777,
                  "src": "14507:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14507:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35766,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "14539:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35777,
                  "src": "14531:16:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14531:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14465:88:64"
            },
            "returnParameters": {
              "id": 35776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35769,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "14622:9:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35777,
                  "src": "14614:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35768,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14614:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35771,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "14651:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35777,
                  "src": "14645:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35770,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "14645:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35773,
                  "mutability": "mutable",
                  "name": "deposit",
                  "nameLocation": "14681:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35777,
                  "src": "14673:15:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14673:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35775,
                  "mutability": "mutable",
                  "name": "owedDeposit",
                  "nameLocation": "14710:11:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35777,
                  "src": "14702:19:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14702:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14600:131:64"
            },
            "scope": 35892,
            "src": "14449:283:64",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35778,
              "nodeType": "StructuredDocumentation",
              "src": "14738:445:64",
              "text": " @notice Get flow data using agreementId\n @dev flowId (agreementId) is the keccak256 hash of encoded sender and receiver\n @param token Super token address\n @param agreementId The agreement ID\n @return timestamp Timestamp of when the flow is updated\n @return flowRate The flow rate\n @return deposit The deposit amount of the flow\n @return owedDeposit The owed deposit amount of the flow"
            },
            "functionSelector": "aabd2668",
            "id": 35794,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getFlowByID",
            "nameLocation": "15197:11:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35781,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "15234:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35794,
                  "src": "15217:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35780,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35779,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "15217:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "15217:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "15217:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35783,
                  "mutability": "mutable",
                  "name": "agreementId",
                  "nameLocation": "15256:11:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35794,
                  "src": "15248:19:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35782,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15248:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15208:65:64"
            },
            "returnParameters": {
              "id": 35793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35786,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "15342:9:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35794,
                  "src": "15334:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15334:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35788,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "15371:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35794,
                  "src": "15365:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35787,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "15365:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35790,
                  "mutability": "mutable",
                  "name": "deposit",
                  "nameLocation": "15401:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35794,
                  "src": "15393:15:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15393:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35792,
                  "mutability": "mutable",
                  "name": "owedDeposit",
                  "nameLocation": "15430:11:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35794,
                  "src": "15422:19:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15422:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15320:131:64"
            },
            "scope": 35892,
            "src": "15188:264:64",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35795,
              "nodeType": "StructuredDocumentation",
              "src": "15458:436:64",
              "text": " @dev Get the aggregated flow info of the account\n @param token Super token address\n @param account Account for the query\n @return timestamp Timestamp of when a flow was last updated for account\n @return flowRate The net flow rate of token for account\n @return deposit The sum of all deposits for account's flows\n @return owedDeposit The sum of all owed deposits for account's flows"
            },
            "functionSelector": "0f1ac495",
            "id": 35811,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountFlowInfo",
            "nameLocation": "15908:18:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35798,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "15953:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35811,
                  "src": "15936:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35797,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35796,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "15936:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "15936:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "15936:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35800,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "15976:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35811,
                  "src": "15968:15:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15968:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15926:63:64"
            },
            "returnParameters": {
              "id": 35810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35803,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "16058:9:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35811,
                  "src": "16050:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16050:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35805,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "16087:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35811,
                  "src": "16081:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35804,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "16081:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35807,
                  "mutability": "mutable",
                  "name": "deposit",
                  "nameLocation": "16117:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35811,
                  "src": "16109:15:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16109:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35809,
                  "mutability": "mutable",
                  "name": "owedDeposit",
                  "nameLocation": "16146:11:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35811,
                  "src": "16138:19:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16138:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16036:122:64"
            },
            "scope": 35892,
            "src": "15899:260:64",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35812,
              "nodeType": "StructuredDocumentation",
              "src": "16165:182:64",
              "text": " @dev Get the net flow rate of the account\n @param token Super token address\n @param account Account for the query\n @return flowRate Net flow rate"
            },
            "functionSelector": "e8e7e2d1",
            "id": 35822,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getNetFlow",
            "nameLocation": "16361:10:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35815,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "16398:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35822,
                  "src": "16381:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35814,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35813,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "16381:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "16381:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "16381:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35817,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "16421:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35822,
                  "src": "16413:15:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16413:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16371:63:64"
            },
            "returnParameters": {
              "id": 35821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35820,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "16488:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35822,
                  "src": "16482:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35819,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "16482:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16481:16:64"
            },
            "scope": 35892,
            "src": "16352:146:64",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35823,
              "nodeType": "StructuredDocumentation",
              "src": "16504:761:64",
              "text": " @notice Delete the flow between sender and receiver\n @dev flowId (agreementId) is the keccak256 hash of encoded sender and receiver\n @param token Super token address\n @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n @param receiver Flow receiver address\n @custom:callbacks\n - AgreementTerminated\n   - agreementId - can be used in getFlowByID\n   - agreementData - abi.encode(address flowSender, address flowReceiver)\n @custom:note\n - Both flow sender and receiver may delete the flow\n - If Sender account is insolvent or in critical state, a solvency agent may\n   also terminate the agreement\n - Gas fee may be returned to the sender"
            },
            "functionSelector": "b4b333c6",
            "id": 35837,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteFlow",
            "nameLocation": "17279:10:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35826,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "17316:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35837,
                  "src": "17299:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35825,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35824,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "17299:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "17299:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "17299:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35828,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "17339:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35837,
                  "src": "17331:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17331:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35830,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "17363:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35837,
                  "src": "17355:16:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17355:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35832,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nameLocation": "17396:3:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35837,
                  "src": "17381:18:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35831,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "17381:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17289:116:64"
            },
            "returnParameters": {
              "id": 35836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35835,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nameLocation": "17460:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35837,
                  "src": "17447:19:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35834,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "17447:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17446:21:64"
            },
            "scope": 35892,
            "src": "17270:198:64",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 35838,
              "nodeType": "StructuredDocumentation",
              "src": "17474:321:64",
              "text": " @notice Delete the flow between sender and receiver\n @dev A flow deleted by an approved flow operator (see above for details on callbacks)\n @param token Super token address\n @param ctx Context bytes (see ISuperfluid.sol for Context struct)\n @param receiver Flow receiver address"
            },
            "functionSelector": "4c8b181f",
            "id": 35852,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deleteFlowByOperator",
            "nameLocation": "17809:20:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35841,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "17856:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35852,
                  "src": "17839:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35840,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35839,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "17839:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "17839:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "17839:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35843,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "17879:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35852,
                  "src": "17871:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17871:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35845,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "17903:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35852,
                  "src": "17895:16:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35844,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17895:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35847,
                  "mutability": "mutable",
                  "name": "ctx",
                  "nameLocation": "17936:3:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35852,
                  "src": "17921:18:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35846,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "17921:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17829:116:64"
            },
            "returnParameters": {
              "id": 35851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35850,
                  "mutability": "mutable",
                  "name": "newCtx",
                  "nameLocation": "18000:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35852,
                  "src": "17987:19:64",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35849,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "17987:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17986:21:64"
            },
            "scope": 35892,
            "src": "17800:208:64",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 35853,
              "nodeType": "StructuredDocumentation",
              "src": "18014:353:64",
              "text": " @dev Flow operator updated event\n @param token Super token address\n @param sender Flow sender address\n @param flowOperator Flow operator address\n @param permissions Octo bitmask representation of permissions\n @param flowRateAllowance The flow rate allowance the `flowOperator` is granted (only goes down)"
            },
            "eventSelector": "c0d5d3a6ac18cc1769788c925e6e7fc89cd47e4270a42884736fa9b3ec09f3a8",
            "id": 35866,
            "name": "FlowOperatorUpdated",
            "nameLocation": "18378:19:64",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 35865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35856,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "18432:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35866,
                  "src": "18407:30:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35855,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35854,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "18407:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "18407:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "18407:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35858,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "18463:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35866,
                  "src": "18447:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18447:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35860,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "flowOperator",
                  "nameLocation": "18495:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35866,
                  "src": "18479:28:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35859,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18479:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35862,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "permissions",
                  "nameLocation": "18523:11:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35866,
                  "src": "18517:17:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 35861,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "18517:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35864,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "flowRateAllowance",
                  "nameLocation": "18550:17:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35866,
                  "src": "18544:23:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35863,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "18544:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18397:176:64"
            },
            "src": "18372:202:64"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 35867,
              "nodeType": "StructuredDocumentation",
              "src": "18580:466:64",
              "text": " @dev Flow updated event\n @param token Super token address\n @param sender Flow sender address\n @param receiver Flow recipient address\n @param flowRate Flow rate in amount per second for this flow\n @param totalSenderFlowRate Total flow rate in amount per second for the sender\n @param totalReceiverFlowRate Total flow rate in amount per second for the receiver\n @param userData The user provided data"
            },
            "eventSelector": "57269d2ebcccecdcc0d9d2c0a0b80ead95f344e28ec20f50f709811f209d4e0e",
            "id": 35884,
            "name": "FlowUpdated",
            "nameLocation": "19057:11:64",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 35883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35870,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "19103:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35884,
                  "src": "19078:30:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                    "typeString": "contract ISuperfluidToken"
                  },
                  "typeName": {
                    "id": 35869,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 35868,
                      "name": "ISuperfluidToken",
                      "nameLocations": [
                        "19078:16:64"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 39368,
                      "src": "19078:16:64"
                    },
                    "referencedDeclaration": 39368,
                    "src": "19078:16:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluidToken_$39368",
                      "typeString": "contract ISuperfluidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35872,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "19134:6:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35884,
                  "src": "19118:22:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19118:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35874,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "19166:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35884,
                  "src": "19150:24:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19150:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35876,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "19190:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35884,
                  "src": "19184:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 35875,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "19184:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35878,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalSenderFlowRate",
                  "nameLocation": "19215:19:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35884,
                  "src": "19208:26:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 35877,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19208:6:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35880,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalReceiverFlowRate",
                  "nameLocation": "19251:21:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35884,
                  "src": "19244:28:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 35879,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19244:6:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35882,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "19288:8:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35884,
                  "src": "19282:14:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 35881,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "19282:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19068:234:64"
            },
            "src": "19051:252:64"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 35885,
              "nodeType": "StructuredDocumentation",
              "src": "19309:181:64",
              "text": " @dev Flow updated extension event\n @param flowOperator Flow operator address - the Context.msgSender\n @param deposit The deposit amount for the stream"
            },
            "eventSelector": "71e0c98e270fc3084227b473f176924d5303ece8c639e679998a2d7dc8e70f74",
            "id": 35891,
            "name": "FlowUpdatedExtension",
            "nameLocation": "19501:20:64",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 35890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35887,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "flowOperator",
                  "nameLocation": "19547:12:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35891,
                  "src": "19531:28:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19531:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35889,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "deposit",
                  "nameLocation": "19577:7:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 35891,
                  "src": "19569:15:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35888,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19569:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19521:69:64"
            },
            "src": "19495:96:64"
          }
        ],
        "scope": 35893,
        "src": "275:19318:64",
        "usedErrors": [
          35459,
          35461,
          35463,
          35465,
          35467,
          35469,
          35471,
          35473,
          35475,
          35477,
          35479,
          35481,
          35483,
          35485,
          35487,
          35489,
          35491,
          35493,
          35495,
          35497
        ],
        "usedEvents": [
          35866,
          35884,
          35891
        ]
      }
    ],
    "src": "32:19562:64"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.26+commit.8a97fa7a.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-08-06T17:02:39.650Z",
  "devdoc": {
    "author": "Superfluid",
    "events": {
      "FlowOperatorUpdated(address,address,address,uint8,int96)": {
        "details": "Flow operator updated event",
        "params": {
          "flowOperator": "Flow operator address",
          "flowRateAllowance": "The flow rate allowance the `flowOperator` is granted (only goes down)",
          "permissions": "Octo bitmask representation of permissions",
          "sender": "Flow sender address",
          "token": "Super token address"
        }
      },
      "FlowUpdated(address,address,address,int96,int256,int256,bytes)": {
        "details": "Flow updated event",
        "params": {
          "flowRate": "Flow rate in amount per second for this flow",
          "receiver": "Flow recipient address",
          "sender": "Flow sender address",
          "token": "Super token address",
          "totalReceiverFlowRate": "Total flow rate in amount per second for the receiver",
          "totalSenderFlowRate": "Total flow rate in amount per second for the sender",
          "userData": "The user provided data"
        }
      },
      "FlowUpdatedExtension(address,uint256)": {
        "details": "Flow updated extension event",
        "params": {
          "deposit": "The deposit amount for the stream",
          "flowOperator": "Flow operator address - the Context.msgSender"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "agreementType()": {
        "details": "ISuperAgreement.agreementType implementation"
      },
      "authorizeFlowOperatorWithFullControl(address,address,bytes)": {
        "details": "msgSender from `ctx` grants `flowOperator` all permissions with flowRateAllowance as type(int96).max",
        "params": {
          "ctx": "Context bytes (see ISuperfluid.sol for Context struct)",
          "flowOperator": "The permission grantee address",
          "token": "Super token address"
        }
      },
      "createFlow(address,address,int96,bytes)": {
        "custom:callbacks": "- AgreementCreated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver)",
        "custom:note": "- A deposit is taken as safety margin for the solvency agents - A extra gas fee may be taken to pay for solvency agent liquidations",
        "details": "flowId (agreementId) is the keccak256 hash of encoded sender and receiver",
        "params": {
          "ctx": "Context bytes (see ISuperfluid.sol for Context struct)",
          "flowRate": "New flow rate in amount per second",
          "receiver": "Flow receiver address",
          "token": "Super token address"
        }
      },
      "createFlowByOperator(address,address,address,int96,bytes)": {
        "details": "A flow created by an approved flow operator (see above for details on callbacks)",
        "params": {
          "ctx": "Context bytes (see ISuperfluid.sol for Context struct)",
          "flowRate": "New flow rate in amount per second",
          "receiver": "Flow receiver address",
          "sender": "Flow sender address (has granted permissions)",
          "token": "Super token address"
        }
      },
      "decreaseFlowRateAllowance(address,address,int96,bytes)": {
        "details": "msgSender from `ctx` decreases flow rate allowance for the `flowOperator` by `subtractedFlowRateAllowance`if `subtractedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE",
        "params": {
          "ctx": "Context bytes (see ISuperfluid.sol for Context struct)",
          "flowOperator": "The permission grantee address",
          "subtractedFlowRateAllowance": "The flow rate allowance delta",
          "token": "Super token address"
        },
        "returns": {
          "newCtx": "The new context bytes"
        }
      },
      "decreaseFlowRateAllowanceWithPermissions(address,address,uint8,int96,bytes)": {
        "details": "msgSender from `ctx` decreases flow rate allowance for the `flowOperator` by `subtractedFlowRateAllowance`if `subtractedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE",
        "params": {
          "ctx": "Context bytes (see ISuperfluid.sol for Context struct)",
          "flowOperator": "The permission grantee address",
          "permissionsToRemove": "A bitmask representation of the granted permissions to remove as a delta",
          "subtractedFlowRateAllowance": "The flow rate allowance delta",
          "token": "Super token address"
        },
        "returns": {
          "newCtx": "The new context bytes"
        }
      },
      "deleteFlow(address,address,address,bytes)": {
        "custom:callbacks": "- AgreementTerminated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver)",
        "custom:note": "- Both flow sender and receiver may delete the flow - If Sender account is insolvent or in critical state, a solvency agent may   also terminate the agreement - Gas fee may be returned to the sender",
        "details": "flowId (agreementId) is the keccak256 hash of encoded sender and receiver",
        "params": {
          "ctx": "Context bytes (see ISuperfluid.sol for Context struct)",
          "receiver": "Flow receiver address",
          "token": "Super token address"
        }
      },
      "deleteFlowByOperator(address,address,address,bytes)": {
        "details": "A flow deleted by an approved flow operator (see above for details on callbacks)",
        "params": {
          "ctx": "Context bytes (see ISuperfluid.sol for Context struct)",
          "receiver": "Flow receiver address",
          "token": "Super token address"
        }
      },
      "getAccountFlowInfo(address,address)": {
        "details": "Get the aggregated flow info of the account",
        "params": {
          "account": "Account for the query",
          "token": "Super token address"
        },
        "returns": {
          "deposit": "The sum of all deposits for account's flows",
          "flowRate": "The net flow rate of token for account",
          "owedDeposit": "The sum of all owed deposits for account's flows",
          "timestamp": "Timestamp of when a flow was last updated for account"
        }
      },
      "getDepositRequiredForFlowRate(address,int96)": {
        "custom:note": "- if calculated deposit (flowRate * liquidationPeriod) is less   than the minimum deposit, we use the minimum deposit otherwise   we use the calculated deposit",
        "details": "Calculates the deposit based on the liquidationPeriod and flowRate",
        "params": {
          "flowRate": "Flow rate to be tested"
        },
        "returns": {
          "deposit": "The deposit amount based on flowRate and liquidationPeriod"
        }
      },
      "getFlow(address,address,address)": {
        "details": "Get the flow data between `sender` and `receiver` of `token`",
        "params": {
          "receiver": "Flow receiver",
          "sender": "Flow sender",
          "token": "Super token address"
        },
        "returns": {
          "deposit": "The amount of deposit the flow",
          "flowRate": "The flow rate",
          "owedDeposit": "The amount of owed deposit of the flow",
          "timestamp": "Timestamp of when the flow is updated"
        }
      },
      "getFlowByID(address,bytes32)": {
        "details": "flowId (agreementId) is the keccak256 hash of encoded sender and receiver",
        "params": {
          "agreementId": "The agreement ID",
          "token": "Super token address"
        },
        "returns": {
          "deposit": "The deposit amount of the flow",
          "flowRate": "The flow rate",
          "owedDeposit": "The owed deposit amount of the flow",
          "timestamp": "Timestamp of when the flow is updated"
        }
      },
      "getFlowOperatorData(address,address,address)": {
        "params": {
          "flowOperator": "The permission grantee address",
          "sender": "The permission granter address",
          "token": "Super token address"
        },
        "returns": {
          "flowOperatorId": "The keccak256 hash of encoded string \"flowOperator\", sender and flowOperator",
          "flowRateAllowance": "The flow rate allowance the `flowOperator` is granted (only goes down)",
          "permissions": "A bitmask representation of the granted permissions"
        }
      },
      "getFlowOperatorDataByID(address,bytes32)": {
        "params": {
          "flowOperatorId": "The keccak256 hash of encoded string \"flowOperator\", sender and flowOperator",
          "token": "Super token address"
        },
        "returns": {
          "flowRateAllowance": "The flow rate allowance the `flowOperator` is granted (only goes down)",
          "permissions": "A bitmask representation of the granted permissions"
        }
      },
      "getMaximumFlowRateFromDeposit(address,uint256)": {
        "details": "The deposit is clipped and rounded down",
        "params": {
          "deposit": "Deposit amount used for creating the flow"
        },
        "returns": {
          "flowRate": "The maximum flow rate"
        }
      },
      "getNetFlow(address,address)": {
        "details": "Get the net flow rate of the account",
        "params": {
          "account": "Account for the query",
          "token": "Super token address"
        },
        "returns": {
          "flowRate": "Net flow rate"
        }
      },
      "increaseFlowRateAllowance(address,address,int96,bytes)": {
        "details": "if `addedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE",
        "params": {
          "addedFlowRateAllowance": "The flow rate allowance delta",
          "ctx": "Context bytes (see ISuperfluid.sol for Context struct)",
          "flowOperator": "The permission grantee address",
          "token": "Super token address"
        },
        "returns": {
          "newCtx": "The new context bytes"
        }
      },
      "increaseFlowRateAllowanceWithPermissions(address,address,uint8,int96,bytes)": {
        "details": "msgSender from `ctx` increases flow rate allowance for the `flowOperator` by `addedFlowRateAllowance`if `addedFlowRateAllowance` is negative, we revert with CFA_ACL_NO_NEGATIVE_ALLOWANCE",
        "params": {
          "addedFlowRateAllowance": "The flow rate allowance delta",
          "ctx": "Context bytes (see ISuperfluid.sol for Context struct)",
          "flowOperator": "The permission grantee address",
          "permissionsToAdd": "A bitmask representation of the granted permissions to add as a delta",
          "token": "Super token address"
        },
        "returns": {
          "newCtx": "The new context bytes"
        }
      },
      "isPatricianPeriod(address,address,uint256)": {
        "details": "Returns whether it is the patrician period based on timestamp",
        "params": {
          "account": "The account we are interested in",
          "timestamp": "The timestamp we are interested in observing the result of isPatricianPeriod"
        },
        "returns": {
          "_0": "bool Whether it is currently the patrician period dictated by governance"
        }
      },
      "isPatricianPeriodNow(address,address)": {
        "details": "Returns whether it is the patrician period based on host.getNow()",
        "params": {
          "account": "The account we are interested in"
        },
        "returns": {
          "isCurrentlyPatricianPeriod": "Whether it is currently the patrician period dictated by governance",
          "timestamp": "The value of host.getNow()"
        }
      },
      "realtimeBalanceOf(address,address,uint256)": {
        "details": "Calculate the real-time balance for the account of this agreement class",
        "params": {
          "account": "Account the state belongs to",
          "time": "Time used for the calculation"
        },
        "returns": {
          "deposit": "Account deposit amount of this agreement",
          "dynamicBalance": "Dynamic balance portion of real-time balance of this agreement",
          "owedDeposit": "Account owed deposit amount of this agreement"
        }
      },
      "revokeFlowOperatorWithFullControl(address,address,bytes)": {
        "details": "`permissions` and `flowRateAllowance` will both be set to 0",
        "params": {
          "ctx": "Context bytes (see ISuperfluid.sol for Context struct)",
          "flowOperator": "The permission grantee address",
          "token": "Super token address"
        }
      },
      "updateFlow(address,address,int96,bytes)": {
        "custom:callbacks": "- AgreementUpdated   - agreementId - can be used in getFlowByID   - agreementData - abi.encode(address flowSender, address flowReceiver)",
        "custom:note": "- Only the flow sender may update the flow rate - Even if the flow rate is zero, the flow is not deleted from the system - Deposit amount will be adjusted accordingly - No new gas fee is charged",
        "details": "flowId (agreementId) is the keccak256 hash of encoded sender and receiver",
        "params": {
          "ctx": "Context bytes (see ISuperfluid.sol for Context struct)",
          "flowRate": "New flow rate in amount per second",
          "receiver": "Flow receiver address",
          "token": "Super token address"
        }
      },
      "updateFlowByOperator(address,address,address,int96,bytes)": {
        "details": "A flow updated by an approved flow operator (see above for details on callbacks)",
        "params": {
          "ctx": "Context bytes (see ISuperfluid.sol for Context struct)",
          "flowRate": "New flow rate in amount per second",
          "receiver": "Flow receiver address",
          "sender": "Flow sender address (has granted permissions)",
          "token": "Super token address"
        }
      },
      "updateFlowOperatorPermissions(address,address,uint8,int96,bytes)": {
        "details": "msgSender from `ctx` updates permissions for the `flowOperator` with `flowRateAllowance`",
        "params": {
          "ctx": "Context bytes (see ISuperfluid.sol for Context struct)",
          "flowOperator": "The permission grantee address",
          "flowRateAllowance": "The flow rate allowance the `flowOperator` is granted (only goes down)",
          "permissions": "A bitmask representation of the granted permissions",
          "token": "Super token address"
        }
      }
    },
    "title": "Constant Flow Agreement interface",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createFlow(address,address,int96,bytes)": {
        "notice": "Create a flow betwen ctx.msgSender and receiver"
      },
      "createFlowByOperator(address,address,address,int96,bytes)": {
        "notice": "Create a flow between sender and receiver"
      },
      "deleteFlow(address,address,address,bytes)": {
        "notice": "Delete the flow between sender and receiver"
      },
      "deleteFlowByOperator(address,address,address,bytes)": {
        "notice": "Delete the flow between sender and receiver"
      },
      "getDepositRequiredForFlowRate(address,int96)": {
        "notice": "Get the deposit required for creating the flow"
      },
      "getFlowByID(address,bytes32)": {
        "notice": "Get flow data using agreementId"
      },
      "getFlowOperatorData(address,address,address)": {
        "notice": "Get the permissions of a flow operator between `sender` and `flowOperator` for `token`"
      },
      "getFlowOperatorDataByID(address,bytes32)": {
        "notice": "Get flow operator using flowOperatorId"
      },
      "getMaximumFlowRateFromDeposit(address,uint256)": {
        "notice": "Get the maximum flow rate allowed with the deposit"
      },
      "increaseFlowRateAllowance(address,address,int96,bytes)": {
        "notice": "msgSender from `ctx` increases flow rate allowance for the `flowOperator` by `addedFlowRateAllowance`"
      },
      "revokeFlowOperatorWithFullControl(address,address,bytes)": {
        "notice": "msgSender from `ctx` revokes `flowOperator` create/update/delete permissions"
      },
      "updateFlow(address,address,int96,bytes)": {
        "notice": "Update the flow rate between ctx.msgSender and receiver"
      },
      "updateFlowByOperator(address,address,address,int96,bytes)": {
        "notice": "Update a flow between sender and receiver"
      }
    },
    "version": 1
  }
}