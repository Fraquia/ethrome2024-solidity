{
  "contractName": "IUserDefinedMacro",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluid",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "params",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "msgSender",
          "type": "address"
        }
      ],
      "name": "buildBatchOperations",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "operationType",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct ISuperfluid.Operation[]",
          "name": "operations",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"buildBatchOperations\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"operationType\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct ISuperfluid.Operation[]\",\"name\":\"operations\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"User-defined macro used in implementations of TrustedMacros.\",\"kind\":\"dev\",\"methods\":{\"buildBatchOperations(address,bytes,address)\":{\"details\":\"Build batch operations according to the parameters provided. It's up to the macro contract to map the provided params (can also be empty) to any valid list of operations.\",\"params\":{\"host\":\"The executing host contract.\",\"msgSender\":\"The msg.sender of the call to the MacroForwarder.\",\"params\":\"The encoded form of the parameters.\"},\"returns\":{\"operations\":\"The batch operations built.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/utils/IUserDefinedMacro.sol\":\"IUserDefinedMacro\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432\",\"dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590\",\"dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq\"]},\"project:/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol\":{\"keccak256\":\"0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387\",\"dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg\"]},\"project:/contracts/interfaces/agreements/gdav1/IGeneralDistributionAgreementV1.sol\":{\"keccak256\":\"0x2453b6e031f02e22acbec1d70746e2294b27dd19138b925c0e638ab70a73f4dc\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://86d4cf488d99f75563192185a476569be505ba5eadc2b4f0d57b749d469c4ec9\",\"dweb:/ipfs/QmYJ1JLQi5K6HjtW24xDj5mTTAbhPTW9Z24qiZR76P5oFc\"]},\"project:/contracts/interfaces/agreements/gdav1/IPoolAdminNFT.sol\":{\"keccak256\":\"0x114cbccfd652231eb5454ab9c4cfe0d3a7427943dee0cce72d88160f12ed8505\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0837cc47bcd635ab470e336e9448fc1160531220aa8a1d55cea39bbee43af6ab\",\"dweb:/ipfs/QmbpaZcVmSsCeoE3j494TmbWzFriKgUR4TsTK5BwjvxRCw\"]},\"project:/contracts/interfaces/agreements/gdav1/IPoolMemberNFT.sol\":{\"keccak256\":\"0x5a52452b00db96398759f1a2017ed8d76390730cb16a0d3e143b1fc7c5b99bed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f3a7c1f327fde03f63058d196f48472f69c0314e77214c6d3661f4b1b85ff99\",\"dweb:/ipfs/Qmf8mJJnPqDPqmDKiofqEhrDFwo9d4zWt5NsToqSH5F6mL\"]},\"project:/contracts/interfaces/agreements/gdav1/IPoolNFTBase.sol\":{\"keccak256\":\"0x1e5604256c5dd52f969b46feea0d708bde11c1a481bf7c50e33c67fd5dbf4262\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6c7c6c57094abc70ef32b2844b9df403e2c0ca7cee57a90f87038f2f071f7683\",\"dweb:/ipfs/QmSfBSuh3LWKJ3CcfPkVVnxy4uUsaXhgFMU1X7CA5Ym7wS\"]},\"project:/contracts/interfaces/agreements/gdav1/ISuperfluidPool.sol\":{\"keccak256\":\"0xba35457f17700196958d60627fdff2eeb3aba1e39188e2bbc695ca6d18cc7c62\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://13c5974b4817df9c7ac34f2b74da74340e22005ee027483cfabef109325f30af\",\"dweb:/ipfs/QmSGb4LUCEjsT3UNeMNQWoSDUSGeRgk6neNpm8zELFqpSr\"]},\"project:/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xb0d023a924c5400696c6763e8cde65bcf30f33ed951ed3cf84cf8411b7259079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0508f5153b25d9a2367335d89f06e841f584654d8ceb6c34c8244d85f195bc01\",\"dweb:/ipfs/QmfDY4NZqDxoBEwEMd2GQBF4dvND17gfK3xhZYs5VZF9Fc\"]},\"project:/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06\",\"dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK\"]},\"project:/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826\",\"dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk\"]},\"project:/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xc3252f64a9abebccb24a8ce23961a9a2b8ccfca54dc8737cbe26c3426ddffd15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fcedca6e4e7cd6482589c9c49a104943c7bfa308056a450185a95b234f26194\",\"dweb:/ipfs/QmVTaiBXbfHYk4ivpTjbqyA76byz8SXwLAcowZ6uJETzJB\"]},\"project:/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0x85b2cae18114b9253080a6f237eb10b5bd47b696ea4ac6f2c6fde17ab09758e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c1324d63067436949c181c27b9fff9f29b4ec4ae142d57a6a8b6eeee481c548\",\"dweb:/ipfs/QmVBdQZEa6icdz4wabr3LDD7BifebmjnvtBDZTGSy2EMds\"]},\"project:/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x002f2a2e6d730acb43b345e0ac0d4c2428d3dc2818a07e5bbae95efc438ff416\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://904119b60c85de02a77cc518bcc212acec182d30ef9d64024f682d787b0d8497\",\"dweb:/ipfs/QmTy39PU5AsFMw1AAYt3PD7iwtxtiTmbxDMcis6GFAVb9B\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x345e483e26ba79b19bce42b00e3b89f6ffdf11ba851f552e9c15b3eda1a993f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efde589a0280f1388b6e47f4cdb4406292a28bae54881e624858726621eccec4\",\"dweb:/ipfs/QmaRrsRqCauvVLBZavcAURNXrFNP1WxNKGkdQehFavRsG6\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1\",\"dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7\"]},\"project:/contracts/interfaces/tokens/ISETH.sol\":{\"keccak256\":\"0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb\",\"dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT\"]},\"project:/contracts/interfaces/utils/IUserDefinedMacro.sol\":{\"keccak256\":\"0x1db64d69e2acae3322e6e2fcac607894351129ec17f2944c6295a2a83058b492\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aca89d59b497552ce89d98895ca899be13dfa95b0761765f06b50e4529910be5\",\"dweb:/ipfs/Qmbw6yELt12WuVrsQL3FfLxZhpDyPyLBeUPf2QveE8Wx2Z\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.11;\n\nimport { ISuperfluid } from \"../superfluid/ISuperfluid.sol\";\n\n/**\n * @dev User-defined macro used in implementations of TrustedMacros.\n */\ninterface IUserDefinedMacro {\n    /**\n     * @dev Build batch operations according to the parameters provided.\n     * It's up to the macro contract to map the provided params (can also be empty) to any\n     * valid list of operations.\n     * @param  host       The executing host contract.\n     * @param  params     The encoded form of the parameters.\n     * @param  msgSender  The msg.sender of the call to the MacroForwarder.\n     * @return operations The batch operations built.\n     */\n    function buildBatchOperations(ISuperfluid host, bytes memory params, address msgSender) external view\n        returns (ISuperfluid.Operation[] memory operations);\n}\n",
  "sourcePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/utils/IUserDefinedMacro.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/utils/IUserDefinedMacro.sol",
    "exportedSymbols": {
      "ISuperfluid": [
        38940
      ],
      "IUserDefinedMacro": [
        39537
      ]
    },
    "id": 39538,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 39518,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:25:86"
      },
      {
        "absolutePath": "project:/contracts/interfaces/superfluid/ISuperfluid.sol",
        "file": "../superfluid/ISuperfluid.sol",
        "id": 39520,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 39538,
        "sourceUnit": 38941,
        "src": "59:60:86",
        "symbolAliases": [
          {
            "foreign": {
              "id": 39519,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38940,
              "src": "68:11:86",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IUserDefinedMacro",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 39521,
          "nodeType": "StructuredDocumentation",
          "src": "121:76:86",
          "text": " @dev User-defined macro used in implementations of TrustedMacros."
        },
        "fullyImplemented": false,
        "id": 39537,
        "linearizedBaseContracts": [
          39537
        ],
        "name": "IUserDefinedMacro",
        "nameLocation": "208:17:86",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 39522,
              "nodeType": "StructuredDocumentation",
              "src": "232:455:86",
              "text": " @dev Build batch operations according to the parameters provided.\n It's up to the macro contract to map the provided params (can also be empty) to any\n valid list of operations.\n @param  host       The executing host contract.\n @param  params     The encoded form of the parameters.\n @param  msgSender  The msg.sender of the call to the MacroForwarder.\n @return operations The batch operations built."
            },
            "functionSelector": "d052b023",
            "id": 39536,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "buildBatchOperations",
            "nameLocation": "701:20:86",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39525,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "734:4:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 39536,
                  "src": "722:16:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$38940",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 39524,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 39523,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "722:11:86"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 38940,
                      "src": "722:11:86"
                    },
                    "referencedDeclaration": 38940,
                    "src": "722:11:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$38940",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39527,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "753:6:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 39536,
                  "src": "740:19:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 39526,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:5:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39529,
                  "mutability": "mutable",
                  "name": "msgSender",
                  "nameLocation": "769:9:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 39536,
                  "src": "761:17:86",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39528,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:86",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "721:58:86"
            },
            "returnParameters": {
              "id": 39535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39534,
                  "mutability": "mutable",
                  "name": "operations",
                  "nameLocation": "842:10:86",
                  "nodeType": "VariableDeclaration",
                  "scope": 39536,
                  "src": "811:41:86",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Operation_$38923_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ISuperfluid.Operation[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 39532,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 39531,
                        "name": "ISuperfluid.Operation",
                        "nameLocations": [
                          "811:11:86",
                          "823:9:86"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38923,
                        "src": "811:21:86"
                      },
                      "referencedDeclaration": 38923,
                      "src": "811:21:86",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Operation_$38923_storage_ptr",
                        "typeString": "struct ISuperfluid.Operation"
                      }
                    },
                    "id": 39533,
                    "nodeType": "ArrayTypeName",
                    "src": "811:23:86",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Operation_$38923_storage_$dyn_storage_ptr",
                      "typeString": "struct ISuperfluid.Operation[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "810:43:86"
            },
            "scope": 39537,
            "src": "692:162:86",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 39538,
        "src": "198:658:86",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "32:825:86"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.26+commit.8a97fa7a.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-08-06T17:02:39.686Z",
  "devdoc": {
    "details": "User-defined macro used in implementations of TrustedMacros.",
    "kind": "dev",
    "methods": {
      "buildBatchOperations(address,bytes,address)": {
        "details": "Build batch operations according to the parameters provided. It's up to the macro contract to map the provided params (can also be empty) to any valid list of operations.",
        "params": {
          "host": "The executing host contract.",
          "msgSender": "The msg.sender of the call to the MacroForwarder.",
          "params": "The encoded form of the parameters."
        },
        "returns": {
          "operations": "The batch operations built."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}