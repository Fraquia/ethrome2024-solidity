{
  "contractName": "BaseRelayRecipient",
  "abi": [
    {
      "inputs": [],
      "name": "versionRecipient",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"A base contract to be inherited by any contract that want to receive relayed transactions      A subclass must use \\\"_msgSender()\\\" instead of \\\"msg.sender\\\"      MODIFIED FROM: https://github.com/opengsn/forwarder/blob/master/contracts/BaseRelayRecipient.sol\",\"kind\":\"dev\",\"methods\":{\"isTrustedForwarder(address)\":{\"details\":\"Check if the forwarder is trusted\"},\"versionRecipient()\":{\"details\":\"EIP 2771 version NOTE: - It is not clear if it is actually from the EIP 2771.... - https://docs.biconomy.io/guides/enable-gasless-transactions/eip-2771\"}},\"title\":\"Base relay recipient contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/libs/BaseRelayRecipient.sol\":\"BaseRelayRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/interfaces/utils/IRelayRecipient.sol\":{\"keccak256\":\"0x449c94dc19b806af3ff12ac121c2092a813337f9b8fc8d8df93d1e70fc9f8a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c81819d57bcefb0fa6a9729350ef595bdf7938bb02fac4306a6a7c3871a9085d\",\"dweb:/ipfs/QmRVAm5377PBv2Ct5BX4sfJJWixuhqYtkJ6MqQbPq3yzEa\"]},\"project:/contracts/libs/BaseRelayRecipient.sol\":{\"keccak256\":\"0xc8fe75ea1eb96ce6692c2fa5bf266340cad0c986adcb538ada4604b0aa65ff9f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://4daff1ceea8a9ae48530f502c809dd8fe658fab6a4443a874eb52c4a2e696d09\",\"dweb:/ipfs/QmTB2yXi9how2dGE5jE7jtx93orxtURQ7aSyyLjxoqm6tw\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: AGPLv3\npragma solidity ^0.8.23;\n\nimport { IRelayRecipient } from \"../interfaces/utils/IRelayRecipient.sol\";\n\n\n/**\n * @title Base relay recipient contract\n * @author Superfluid\n * @dev A base contract to be inherited by any contract that want to receive relayed transactions\n *      A subclass must use \"_msgSender()\" instead of \"msg.sender\"\n *      MODIFIED FROM: https://github.com/opengsn/forwarder/blob/master/contracts/BaseRelayRecipient.sol\n */\nabstract contract BaseRelayRecipient is IRelayRecipient {\n\n    /**\n     * @dev Check if the forwarder is trusted\n     */\n    function isTrustedForwarder(address forwarder) public view virtual override returns(bool);\n\n    /**\n     * @dev Return the transaction signer of this call\n     *\n     * if the call came through our trusted forwarder, return the original sender.\n     * otherwise, return `msg.sender`.\n     * should be used in the contract anywhere instead of msg.sender\n     */\n    function _getTransactionSigner() internal virtual view returns (address payable ret) {\n        require(msg.data.length >= 24 && isTrustedForwarder(msg.sender), \"Not trusted forwarder\");\n        // At this point we know that the sender is a trusted forwarder,\n        // so we trust that the last bytes of msg.data are the verified sender address.\n        // extract sender address from the end of msg.data\n        assembly {\n            ret := shr(96,calldataload(sub(calldatasize(),20)))\n        }\n    }\n\n}\n",
  "sourcePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/libs/BaseRelayRecipient.sol",
  "ast": {
    "absolutePath": "project:/contracts/libs/BaseRelayRecipient.sol",
    "exportedSymbols": {
      "BaseRelayRecipient": [
        39576
      ],
      "IRelayRecipient": [
        39452
      ]
    },
    "id": 39577,
    "license": "AGPLv3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 39539,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:24:87"
      },
      {
        "absolutePath": "project:/contracts/interfaces/utils/IRelayRecipient.sol",
        "file": "../interfaces/utils/IRelayRecipient.sol",
        "id": 39541,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 39577,
        "sourceUnit": 39453,
        "src": "61:74:87",
        "symbolAliases": [
          {
            "foreign": {
              "id": 39540,
              "name": "IRelayRecipient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39452,
              "src": "70:15:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 39543,
              "name": "IRelayRecipient",
              "nameLocations": [
                "518:15:87"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39452,
              "src": "518:15:87"
            },
            "id": 39544,
            "nodeType": "InheritanceSpecifier",
            "src": "518:15:87"
          }
        ],
        "canonicalName": "BaseRelayRecipient",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 39542,
          "nodeType": "StructuredDocumentation",
          "src": "138:339:87",
          "text": " @title Base relay recipient contract\n @author Superfluid\n @dev A base contract to be inherited by any contract that want to receive relayed transactions\n      A subclass must use \"_msgSender()\" instead of \"msg.sender\"\n      MODIFIED FROM: https://github.com/opengsn/forwarder/blob/master/contracts/BaseRelayRecipient.sol"
        },
        "fullyImplemented": false,
        "id": 39576,
        "linearizedBaseContracts": [
          39576,
          39452
        ],
        "name": "BaseRelayRecipient",
        "nameLocation": "496:18:87",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              39445
            ],
            "documentation": {
              "id": 39545,
              "nodeType": "StructuredDocumentation",
              "src": "541:57:87",
              "text": " @dev Check if the forwarder is trusted"
            },
            "functionSelector": "572b6c05",
            "id": 39553,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTrustedForwarder",
            "nameLocation": "612:18:87",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 39549,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "670:8:87"
            },
            "parameters": {
              "id": 39548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39547,
                  "mutability": "mutable",
                  "name": "forwarder",
                  "nameLocation": "639:9:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 39553,
                  "src": "631:17:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "630:19:87"
            },
            "returnParameters": {
              "id": 39552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39551,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39553,
                  "src": "687:4:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39550,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "687:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "686:6:87"
            },
            "scope": 39576,
            "src": "603:90:87",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 39574,
              "nodeType": "Block",
              "src": "1053:419:87",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 39569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 39564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 39560,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1071:3:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 39561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1075:4:87",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "src": "1071:8:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 39562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1080:6:87",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1071:15:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "3234",
                            "id": 39563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1090:2:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_24_by_1",
                              "typeString": "int_const 24"
                            },
                            "value": "24"
                          },
                          "src": "1071:21:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 39566,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1115:3:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 39567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1119:6:87",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1115:10:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 39565,
                            "name": "isTrustedForwarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39553,
                            "src": "1096:18:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 39568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1096:30:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1071:55:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74207472757374656420666f72776172646572",
                        "id": 39570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1128:23:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c55544493bc7eeb535999264c70f56bda4911db54b18ae1e4ae3be74ec809c39",
                          "typeString": "literal_string \"Not trusted forwarder\""
                        },
                        "value": "Not trusted forwarder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c55544493bc7eeb535999264c70f56bda4911db54b18ae1e4ae3be74ec809c39",
                          "typeString": "literal_string \"Not trusted forwarder\""
                        }
                      ],
                      "id": 39559,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1063:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 39571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1063:89:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39572,
                  "nodeType": "ExpressionStatement",
                  "src": "1063:89:87"
                },
                {
                  "AST": {
                    "nativeSrc": "1391:75:87",
                    "nodeType": "YulBlock",
                    "src": "1391:75:87",
                    "statements": [
                      {
                        "nativeSrc": "1405:51:87",
                        "nodeType": "YulAssignment",
                        "src": "1405:51:87",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "1416:2:87",
                              "nodeType": "YulLiteral",
                              "src": "1416:2:87",
                              "type": "",
                              "value": "96"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "calldatasize",
                                        "nativeSrc": "1436:12:87",
                                        "nodeType": "YulIdentifier",
                                        "src": "1436:12:87"
                                      },
                                      "nativeSrc": "1436:14:87",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1436:14:87"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "1451:2:87",
                                      "nodeType": "YulLiteral",
                                      "src": "1451:2:87",
                                      "type": "",
                                      "value": "20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nativeSrc": "1432:3:87",
                                    "nodeType": "YulIdentifier",
                                    "src": "1432:3:87"
                                  },
                                  "nativeSrc": "1432:22:87",
                                  "nodeType": "YulFunctionCall",
                                  "src": "1432:22:87"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nativeSrc": "1419:12:87",
                                "nodeType": "YulIdentifier",
                                "src": "1419:12:87"
                              },
                              "nativeSrc": "1419:36:87",
                              "nodeType": "YulFunctionCall",
                              "src": "1419:36:87"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nativeSrc": "1412:3:87",
                            "nodeType": "YulIdentifier",
                            "src": "1412:3:87"
                          },
                          "nativeSrc": "1412:44:87",
                          "nodeType": "YulFunctionCall",
                          "src": "1412:44:87"
                        },
                        "variableNames": [
                          {
                            "name": "ret",
                            "nativeSrc": "1405:3:87",
                            "nodeType": "YulIdentifier",
                            "src": "1405:3:87"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 39557,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1405:3:87",
                      "valueSize": 1
                    }
                  ],
                  "id": 39573,
                  "nodeType": "InlineAssembly",
                  "src": "1382:84:87"
                }
              ]
            },
            "documentation": {
              "id": 39554,
              "nodeType": "StructuredDocumentation",
              "src": "699:264:87",
              "text": " @dev Return the transaction signer of this call\n if the call came through our trusted forwarder, return the original sender.\n otherwise, return `msg.sender`.\n should be used in the contract anywhere instead of msg.sender"
            },
            "id": 39575,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTransactionSigner",
            "nameLocation": "977:21:87",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "998:2:87"
            },
            "returnParameters": {
              "id": 39558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39557,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "1048:3:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 39575,
                  "src": "1032:19:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 39556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1032:15:87",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1031:21:87"
            },
            "scope": 39576,
            "src": "968:504:87",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 39577,
        "src": "478:997:87",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "35:1441:87"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.26+commit.8a97fa7a.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-08-06T17:02:39.687Z",
  "devdoc": {
    "author": "Superfluid",
    "details": "A base contract to be inherited by any contract that want to receive relayed transactions      A subclass must use \"_msgSender()\" instead of \"msg.sender\"      MODIFIED FROM: https://github.com/opengsn/forwarder/blob/master/contracts/BaseRelayRecipient.sol",
    "kind": "dev",
    "methods": {
      "isTrustedForwarder(address)": {
        "details": "Check if the forwarder is trusted"
      },
      "versionRecipient()": {
        "details": "EIP 2771 version NOTE: - It is not clear if it is actually from the EIP 2771.... - https://docs.biconomy.io/guides/enable-gasless-transactions/eip-2771"
      }
    },
    "title": "Base relay recipient contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}