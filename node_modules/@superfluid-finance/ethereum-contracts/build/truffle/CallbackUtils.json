{
  "contractName": "CallbackUtils",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"## Problem Statement When calling an untrusted external callback (or hook), gas limit is usually provided to prevent grief attack from them. However, such gas limits are nested. From the callback invoking site, one might need to differentiate the cases between the outer-layer induced out-of-gas vs. the callback resulted out-of-gas. This library solves such challenge by safely marking the second case with an explicit flag of insufficient-callback-gas-provided. In order to use this library, one must first understand the concept of callback gas limit zones. ## Definitions: callback gas limit zones +---------------------------+--------------+---------------------+ | insufficient-callback-gas | transitional | out-of-callback-gas | +---------------------------+--------------+---------------------+ - insufficient-callback-gas zone   This zone includes all outer gas limits that are below callback gas limit. The invariance of   this zone is that calling the callback shall return with the insufficient-callback-gas-provided   set to true if more gas is needed to execute the callback. - out-of-callback-gas zone   Within this continuous zone, the invariance is that calling the callback shall never return   with the insufficient-callback-gas-provided flag set to true. - transitional zone   Between the insufficient-callback-gas zone to the out-of-callback-gas zone, there is a zone of   unspecified size where insufficient-callback-gas-provided may be set to true. This is due the   factors of EIP-150 Magic N and callback setup overhead. ## EIP-150 Magic N \\\"If a call asks for more gas than the maximum allowed amount (i.e. the total amount of gas remaining in the parent after subtracting the gas cost of the call and memory expansion), do not return an OOG error; instead, if a call asks for more gas than all but one 64th of the maximum allowed amount, call with all but one 64th of the maximum allowed amount of gas (this is equivalent to a version of EIP-90 plus EIP-114). CREATE only provides all but one 64th of the parent gas to the child call.\\\" Another article about this topic: https://medium.com/%40wighawag/ethereum-the-concept-of-gas-and-its-dangers-28d0eb809bb2\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Callback utilities solidity library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"An internal library used to handle different types of out of gas errors in callbacks\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/libs/CallbackUtils.sol\":\"CallbackUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/libs/CallbackUtils.sol\":{\"keccak256\":\"0xe66712db6f0c543b58d96f346beb125faee3ea0068b83ec66fe5e38538b87a3a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://c952691de2d1783452aa41a1caf4f7020bab9546875140d81b85e3a044e67136\",\"dweb:/ipfs/QmWq5tg3gGNWUQca6NkkgwACHQQQ2FocrvPxeYaCqrNhHy\"]}},\"version\":1}",
  "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220538314a077a052b3914d7408fc7c3e17cbcae1ebea4eb5d3a1c6d4ff3293b7bc64736f6c634300081a0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220538314a077a052b3914d7408fc7c3e17cbcae1ebea4eb5d3a1c6d4ff3293b7bc64736f6c634300081a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "2547:1747:89:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;2547:1747:89;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "2547:1747:89:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: AGPLv3\npragma solidity ^0.8.23;\n\n/**\n * @title Callback utilities solidity library\n * @notice An internal library used to handle different types of out of gas errors in callbacks\n *\n * @dev\n *\n * ## Problem Statement\n *\n * When calling an untrusted external callback (or hook), gas limit is usually provided to prevent\n * grief attack from them. However, such gas limits are nested. From the callback invoking site, one\n * might need to differentiate the cases between the outer-layer induced out-of-gas vs. the callback\n * resulted out-of-gas.\n *\n * This library solves such challenge by safely marking the second case with an explicit flag of\n * insufficient-callback-gas-provided. In order to use this library, one must first understand the\n * concept of callback gas limit zones.\n *\n * ## Definitions: callback gas limit zones\n *\n * +---------------------------+--------------+---------------------+\n * | insufficient-callback-gas | transitional | out-of-callback-gas |\n * +---------------------------+--------------+---------------------+\n *\n * - insufficient-callback-gas zone\n *\n *   This zone includes all outer gas limits that are below callback gas limit. The invariance of\n *   this zone is that calling the callback shall return with the insufficient-callback-gas-provided\n *   set to true if more gas is needed to execute the callback.\n *\n * - out-of-callback-gas zone\n *\n *   Within this continuous zone, the invariance is that calling the callback shall never return\n *   with the insufficient-callback-gas-provided flag set to true.\n *\n * - transitional zone\n *\n *   Between the insufficient-callback-gas zone to the out-of-callback-gas zone, there is a zone of\n *   unspecified size where insufficient-callback-gas-provided may be set to true. This is due the\n *   factors of EIP-150 Magic N and callback setup overhead.\n *\n * ## EIP-150 Magic N\n *\n * \"If a call asks for more gas than the maximum allowed amount (i.e. the total amount of gas\n * remaining in the parent after subtracting the gas cost of the call and memory expansion), do not\n * return an OOG error; instead, if a call asks for more gas than all but one 64th of the maximum\n * allowed amount, call with all but one 64th of the maximum allowed amount of gas (this is\n * equivalent to a version of EIP-90 plus EIP-114). CREATE only provides all but one 64th of the\n * parent gas to the child call.\"\n *\n * Another article about this topic:\n * https://medium.com/%40wighawag/ethereum-the-concept-of-gas-and-its-dangers-28d0eb809bb2\n *\n */\nlibrary CallbackUtils {\n    /// The magic N constant from the EIP-150\n    uint256 internal constant EIP150_MAGIC_N = 64;\n\n    /// Make a call to the target with a callback gas limit.\n    function externalCall(address target, bytes memory callData, uint256 callbackGasLimit) internal\n        returns (bool success, bool insufficientCallbackGasProvided, bytes memory returnedData)\n    {\n        uint256 gasLeftBefore = gasleft();\n        // solhint-disable-next-line avoid-low-level-calls\n        (success, returnedData) = address(target).call{ gas: callbackGasLimit }(callData);\n        if (!success) {\n            if (gasleft() <= gasLeftBefore / EIP150_MAGIC_N) insufficientCallbackGasProvided = true;\n        }\n    }\n\n    /// Make a staticcall to the target with a callback gas limit.\n    function staticCall(address target, bytes memory callData, uint256 callbackGasLimit) internal view\n        returns (bool success, bool insufficientCallbackGasProvided, bytes memory returnedData)\n    {\n        uint256 gasLeftBefore = gasleft();\n        // solhint-disable-next-line avoid-low-level-calls\n        (success, returnedData) = address(target).staticcall{ gas: callbackGasLimit }(callData);\n        if (!success) {\n            if (gasleft() <= gasLeftBefore / EIP150_MAGIC_N) insufficientCallbackGasProvided = true;\n        }\n    }\n\n    /// Reliably consume all the gas given.\n    function consumeAllGas() internal pure {\n        // Neither revert or assert consume all gas since Solidity 0.8.20\n        // https://docs.soliditylang.org/en/v0.8.20/control-structures.html#panic-via-assert-and-error-via-require\n        // @solidity memory-safe-assembly\n        // solhint-disable-next-line no-inline-assembly\n        assembly { invalid() }\n    }\n}\n",
  "sourcePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/libs/CallbackUtils.sol",
  "ast": {
    "absolutePath": "project:/contracts/libs/CallbackUtils.sol",
    "exportedSymbols": {
      "CallbackUtils": [
        39831
      ]
    },
    "id": 39832,
    "license": "AGPLv3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 39717,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:24:89"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CallbackUtils",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 39718,
          "nodeType": "StructuredDocumentation",
          "src": "61:2485:89",
          "text": " @title Callback utilities solidity library\n @notice An internal library used to handle different types of out of gas errors in callbacks\n @dev\n ## Problem Statement\n When calling an untrusted external callback (or hook), gas limit is usually provided to prevent\n grief attack from them. However, such gas limits are nested. From the callback invoking site, one\n might need to differentiate the cases between the outer-layer induced out-of-gas vs. the callback\n resulted out-of-gas.\n This library solves such challenge by safely marking the second case with an explicit flag of\n insufficient-callback-gas-provided. In order to use this library, one must first understand the\n concept of callback gas limit zones.\n ## Definitions: callback gas limit zones\n +---------------------------+--------------+---------------------+\n | insufficient-callback-gas | transitional | out-of-callback-gas |\n +---------------------------+--------------+---------------------+\n - insufficient-callback-gas zone\n   This zone includes all outer gas limits that are below callback gas limit. The invariance of\n   this zone is that calling the callback shall return with the insufficient-callback-gas-provided\n   set to true if more gas is needed to execute the callback.\n - out-of-callback-gas zone\n   Within this continuous zone, the invariance is that calling the callback shall never return\n   with the insufficient-callback-gas-provided flag set to true.\n - transitional zone\n   Between the insufficient-callback-gas zone to the out-of-callback-gas zone, there is a zone of\n   unspecified size where insufficient-callback-gas-provided may be set to true. This is due the\n   factors of EIP-150 Magic N and callback setup overhead.\n ## EIP-150 Magic N\n \"If a call asks for more gas than the maximum allowed amount (i.e. the total amount of gas\n remaining in the parent after subtracting the gas cost of the call and memory expansion), do not\n return an OOG error; instead, if a call asks for more gas than all but one 64th of the maximum\n allowed amount, call with all but one 64th of the maximum allowed amount of gas (this is\n equivalent to a version of EIP-90 plus EIP-114). CREATE only provides all but one 64th of the\n parent gas to the child call.\"\n Another article about this topic:\n https://medium.com/%40wighawag/ethereum-the-concept-of-gas-and-its-dangers-28d0eb809bb2"
        },
        "fullyImplemented": true,
        "id": 39831,
        "linearizedBaseContracts": [
          39831
        ],
        "name": "CallbackUtils",
        "nameLocation": "2555:13:89",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "documentation": {
              "id": 39719,
              "nodeType": "StructuredDocumentation",
              "src": "2575:41:89",
              "text": "The magic N constant from the EIP-150"
            },
            "id": 39722,
            "mutability": "constant",
            "name": "EIP150_MAGIC_N",
            "nameLocation": "2647:14:89",
            "nodeType": "VariableDeclaration",
            "scope": 39831,
            "src": "2621:45:89",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39720,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2621:7:89",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3634",
              "id": 39721,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2664:2:89",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_64_by_1",
                "typeString": "int_const 64"
              },
              "value": "64"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 39772,
              "nodeType": "Block",
              "src": "2930:335:89",
              "statements": [
                {
                  "assignments": [
                    39739
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39739,
                      "mutability": "mutable",
                      "name": "gasLeftBefore",
                      "nameLocation": "2948:13:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39772,
                      "src": "2940:21:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39738,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2940:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39742,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 39740,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -7,
                      "src": "2964:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 39741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2964:9:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2940:33:89"
                },
                {
                  "expression": {
                    "id": 39755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 39743,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39732,
                          "src": "3043:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 39744,
                          "name": "returnedData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39736,
                          "src": "3052:12:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 39745,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3042:23:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 39753,
                          "name": "callData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39727,
                          "src": "3114:8:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 39748,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39725,
                                "src": "3076:6:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 39747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3068:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 39746,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3068:7:89",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 39749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3068:15:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 39750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3084:4:89",
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "src": "3068:20:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 39752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "gas"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "id": 39751,
                            "name": "callbackGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39729,
                            "src": "3095:16:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "src": "3068:45:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 39754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3068:55:89",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "3042:81:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39756,
                  "nodeType": "ExpressionStatement",
                  "src": "3042:81:89"
                },
                {
                  "condition": {
                    "id": 39758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3137:8:89",
                    "subExpression": {
                      "id": 39757,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39732,
                      "src": "3138:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39771,
                  "nodeType": "IfStatement",
                  "src": "3133:126:89",
                  "trueBody": {
                    "id": 39770,
                    "nodeType": "Block",
                    "src": "3147:112:89",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 39764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 39759,
                              "name": "gasleft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -7,
                              "src": "3165:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 39760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3165:9:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 39763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 39761,
                              "name": "gasLeftBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39739,
                              "src": "3178:13:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 39762,
                              "name": "EIP150_MAGIC_N",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39722,
                              "src": "3194:14:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3178:30:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3165:43:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 39769,
                        "nodeType": "IfStatement",
                        "src": "3161:87:89",
                        "trueBody": {
                          "expression": {
                            "id": 39767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 39765,
                              "name": "insufficientCallbackGasProvided",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39734,
                              "src": "3210:31:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 39766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3244:4:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "3210:38:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 39768,
                          "nodeType": "ExpressionStatement",
                          "src": "3210:38:89"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 39723,
              "nodeType": "StructuredDocumentation",
              "src": "2673:56:89",
              "text": "Make a call to the target with a callback gas limit."
            },
            "id": 39773,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "externalCall",
            "nameLocation": "2743:12:89",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39725,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "2764:6:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 39773,
                  "src": "2756:14:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2756:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39727,
                  "mutability": "mutable",
                  "name": "callData",
                  "nameLocation": "2785:8:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 39773,
                  "src": "2772:21:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 39726,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2772:5:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39729,
                  "mutability": "mutable",
                  "name": "callbackGasLimit",
                  "nameLocation": "2803:16:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 39773,
                  "src": "2795:24:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2795:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2755:65:89"
            },
            "returnParameters": {
              "id": 39737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39732,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "2852:7:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 39773,
                  "src": "2847:12:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39731,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2847:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39734,
                  "mutability": "mutable",
                  "name": "insufficientCallbackGasProvided",
                  "nameLocation": "2866:31:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 39773,
                  "src": "2861:36:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39733,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2861:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39736,
                  "mutability": "mutable",
                  "name": "returnedData",
                  "nameLocation": "2912:12:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 39773,
                  "src": "2899:25:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 39735,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2899:5:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2846:79:89"
            },
            "scope": 39831,
            "src": "2734:531:89",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 39823,
              "nodeType": "Block",
              "src": "3537:341:89",
              "statements": [
                {
                  "assignments": [
                    39790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39790,
                      "mutability": "mutable",
                      "name": "gasLeftBefore",
                      "nameLocation": "3555:13:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39823,
                      "src": "3547:21:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 39789,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3547:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39793,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 39791,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -7,
                      "src": "3571:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 39792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3571:9:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3547:33:89"
                },
                {
                  "expression": {
                    "id": 39806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 39794,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39783,
                          "src": "3650:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 39795,
                          "name": "returnedData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39787,
                          "src": "3659:12:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 39796,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3649:23:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 39804,
                          "name": "callData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39778,
                          "src": "3727:8:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 39799,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39776,
                                "src": "3683:6:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 39798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3675:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 39797,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3675:7:89",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 39800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3675:15:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 39801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3691:10:89",
                          "memberName": "staticcall",
                          "nodeType": "MemberAccess",
                          "src": "3675:26:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                          }
                        },
                        "id": 39803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "gas"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "id": 39802,
                            "name": "callbackGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39780,
                            "src": "3708:16:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "src": "3675:51:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
                          "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                        }
                      },
                      "id": 39805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3675:61:89",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "3649:87:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39807,
                  "nodeType": "ExpressionStatement",
                  "src": "3649:87:89"
                },
                {
                  "condition": {
                    "id": 39809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3750:8:89",
                    "subExpression": {
                      "id": 39808,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39783,
                      "src": "3751:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39822,
                  "nodeType": "IfStatement",
                  "src": "3746:126:89",
                  "trueBody": {
                    "id": 39821,
                    "nodeType": "Block",
                    "src": "3760:112:89",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 39815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 39810,
                              "name": "gasleft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -7,
                              "src": "3778:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 39811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3778:9:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 39814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 39812,
                              "name": "gasLeftBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39790,
                              "src": "3791:13:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 39813,
                              "name": "EIP150_MAGIC_N",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39722,
                              "src": "3807:14:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3791:30:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3778:43:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 39820,
                        "nodeType": "IfStatement",
                        "src": "3774:87:89",
                        "trueBody": {
                          "expression": {
                            "id": 39818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 39816,
                              "name": "insufficientCallbackGasProvided",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39785,
                              "src": "3823:31:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "74727565",
                              "id": 39817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3857:4:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "src": "3823:38:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 39819,
                          "nodeType": "ExpressionStatement",
                          "src": "3823:38:89"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 39774,
              "nodeType": "StructuredDocumentation",
              "src": "3271:62:89",
              "text": "Make a staticcall to the target with a callback gas limit."
            },
            "id": 39824,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "staticCall",
            "nameLocation": "3347:10:89",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39776,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "3366:6:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 39824,
                  "src": "3358:14:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3358:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39778,
                  "mutability": "mutable",
                  "name": "callData",
                  "nameLocation": "3387:8:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 39824,
                  "src": "3374:21:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 39777,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3374:5:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39780,
                  "mutability": "mutable",
                  "name": "callbackGasLimit",
                  "nameLocation": "3405:16:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 39824,
                  "src": "3397:24:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3397:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3357:65:89"
            },
            "returnParameters": {
              "id": 39788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39783,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "3459:7:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 39824,
                  "src": "3454:12:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39782,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3454:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39785,
                  "mutability": "mutable",
                  "name": "insufficientCallbackGasProvided",
                  "nameLocation": "3473:31:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 39824,
                  "src": "3468:36:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39784,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3468:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39787,
                  "mutability": "mutable",
                  "name": "returnedData",
                  "nameLocation": "3519:12:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 39824,
                  "src": "3506:25:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 39786,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3506:5:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3453:79:89"
            },
            "scope": 39831,
            "src": "3338:540:89",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 39829,
              "nodeType": "Block",
              "src": "3967:325:89",
              "statements": [
                {
                  "AST": {
                    "nativeSrc": "4273:13:89",
                    "nodeType": "YulBlock",
                    "src": "4273:13:89",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "invalid",
                            "nativeSrc": "4275:7:89",
                            "nodeType": "YulIdentifier",
                            "src": "4275:7:89"
                          },
                          "nativeSrc": "4275:9:89",
                          "nodeType": "YulFunctionCall",
                          "src": "4275:9:89"
                        },
                        "nativeSrc": "4275:9:89",
                        "nodeType": "YulExpressionStatement",
                        "src": "4275:9:89"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [],
                  "id": 39828,
                  "nodeType": "InlineAssembly",
                  "src": "4264:22:89"
                }
              ]
            },
            "documentation": {
              "id": 39825,
              "nodeType": "StructuredDocumentation",
              "src": "3884:39:89",
              "text": "Reliably consume all the gas given."
            },
            "id": 39830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "consumeAllGas",
            "nameLocation": "3937:13:89",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3950:2:89"
            },
            "returnParameters": {
              "id": 39827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3967:0:89"
            },
            "scope": 39831,
            "src": "3928:364:89",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 39832,
        "src": "2547:1747:89",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "35:4260:89"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.26+commit.8a97fa7a.Linux.g++"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-08-06T17:02:39.688Z",
  "devdoc": {
    "details": "## Problem Statement When calling an untrusted external callback (or hook), gas limit is usually provided to prevent grief attack from them. However, such gas limits are nested. From the callback invoking site, one might need to differentiate the cases between the outer-layer induced out-of-gas vs. the callback resulted out-of-gas. This library solves such challenge by safely marking the second case with an explicit flag of insufficient-callback-gas-provided. In order to use this library, one must first understand the concept of callback gas limit zones. ## Definitions: callback gas limit zones +---------------------------+--------------+---------------------+ | insufficient-callback-gas | transitional | out-of-callback-gas | +---------------------------+--------------+---------------------+ - insufficient-callback-gas zone   This zone includes all outer gas limits that are below callback gas limit. The invariance of   this zone is that calling the callback shall return with the insufficient-callback-gas-provided   set to true if more gas is needed to execute the callback. - out-of-callback-gas zone   Within this continuous zone, the invariance is that calling the callback shall never return   with the insufficient-callback-gas-provided flag set to true. - transitional zone   Between the insufficient-callback-gas zone to the out-of-callback-gas zone, there is a zone of   unspecified size where insufficient-callback-gas-provided may be set to true. This is due the   factors of EIP-150 Magic N and callback setup overhead. ## EIP-150 Magic N \"If a call asks for more gas than the maximum allowed amount (i.e. the total amount of gas remaining in the parent after subtracting the gas cost of the call and memory expansion), do not return an OOG error; instead, if a call asks for more gas than all but one 64th of the maximum allowed amount, call with all but one 64th of the maximum allowed amount of gas (this is equivalent to a version of EIP-90 plus EIP-114). CREATE only provides all but one 64th of the parent gas to the child call.\" Another article about this topic: https://medium.com/%40wighawag/ethereum-the-concept-of-gas-and-its-dangers-28d0eb809bb2",
    "kind": "dev",
    "methods": {},
    "title": "Callback utilities solidity library",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "An internal library used to handle different types of out of gas errors in callbacks",
    "version": 1
  }
}