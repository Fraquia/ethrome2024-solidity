/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC777",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC777__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IGeneralDistributionAgreementV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGeneralDistributionAgreementV1__factory>;
    getContractFactory(
      name: "IPoolAdminNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolAdminNFT__factory>;
    getContractFactory(
      name: "IPoolMemberNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolMemberNFT__factory>;
    getContractFactory(
      name: "IPoolNFTBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoolNFTBase__factory>;
    getContractFactory(
      name: "ISuperfluidPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISuperfluidPool__factory>;
    getContractFactory(
      name: "IConstantFlowAgreementV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IConstantFlowAgreementV1__factory>;
    getContractFactory(
      name: "IInstantDistributionAgreementV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInstantDistributionAgreementV1__factory>;
    getContractFactory(
      name: "ISuperAgreement",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISuperAgreement__factory>;
    getContractFactory(
      name: "ISuperApp",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISuperApp__factory>;
    getContractFactory(
      name: "ISuperfluid",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISuperfluid__factory>;
    getContractFactory(
      name: "ISuperfluidGovernance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISuperfluidGovernance__factory>;
    getContractFactory(
      name: "ISuperfluidToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISuperfluidToken__factory>;
    getContractFactory(
      name: "ISuperToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISuperToken__factory>;
    getContractFactory(
      name: "ISuperTokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISuperTokenFactory__factory>;
    getContractFactory(
      name: "ISETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISETH__factory>;
    getContractFactory(
      name: "ISETHCustom",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISETHCustom__factory>;
    getContractFactory(
      name: "Campaign",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Campaign__factory>;
    getContractFactory(
      name: "CpFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CpFactory__factory>;

    getContractAt(
      name: "ERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC777",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC777>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IGeneralDistributionAgreementV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IGeneralDistributionAgreementV1>;
    getContractAt(
      name: "IPoolAdminNFT",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolAdminNFT>;
    getContractAt(
      name: "IPoolMemberNFT",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolMemberNFT>;
    getContractAt(
      name: "IPoolNFTBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoolNFTBase>;
    getContractAt(
      name: "ISuperfluidPool",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISuperfluidPool>;
    getContractAt(
      name: "IConstantFlowAgreementV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IConstantFlowAgreementV1>;
    getContractAt(
      name: "IInstantDistributionAgreementV1",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IInstantDistributionAgreementV1>;
    getContractAt(
      name: "ISuperAgreement",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISuperAgreement>;
    getContractAt(
      name: "ISuperApp",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISuperApp>;
    getContractAt(
      name: "ISuperfluid",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISuperfluid>;
    getContractAt(
      name: "ISuperfluidGovernance",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISuperfluidGovernance>;
    getContractAt(
      name: "ISuperfluidToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISuperfluidToken>;
    getContractAt(
      name: "ISuperToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISuperToken>;
    getContractAt(
      name: "ISuperTokenFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISuperTokenFactory>;
    getContractAt(
      name: "ISETH",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISETH>;
    getContractAt(
      name: "ISETHCustom",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ISETHCustom>;
    getContractAt(
      name: "Campaign",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Campaign>;
    getContractAt(
      name: "CpFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CpFactory>;

    deployContract(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC777",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC777>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "IGeneralDistributionAgreementV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGeneralDistributionAgreementV1>;
    deployContract(
      name: "IPoolAdminNFT",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPoolAdminNFT>;
    deployContract(
      name: "IPoolMemberNFT",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPoolMemberNFT>;
    deployContract(
      name: "IPoolNFTBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPoolNFTBase>;
    deployContract(
      name: "ISuperfluidPool",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISuperfluidPool>;
    deployContract(
      name: "IConstantFlowAgreementV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IConstantFlowAgreementV1>;
    deployContract(
      name: "IInstantDistributionAgreementV1",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IInstantDistributionAgreementV1>;
    deployContract(
      name: "ISuperAgreement",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISuperAgreement>;
    deployContract(
      name: "ISuperApp",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISuperApp>;
    deployContract(
      name: "ISuperfluid",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISuperfluid>;
    deployContract(
      name: "ISuperfluidGovernance",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISuperfluidGovernance>;
    deployContract(
      name: "ISuperfluidToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISuperfluidToken>;
    deployContract(
      name: "ISuperToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISuperToken>;
    deployContract(
      name: "ISuperTokenFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISuperTokenFactory>;
    deployContract(
      name: "ISETH",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISETH>;
    deployContract(
      name: "ISETHCustom",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISETHCustom>;
    deployContract(
      name: "Campaign",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Campaign>;
    deployContract(
      name: "CpFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CpFactory>;

    deployContract(
      name: "ERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC1155>;
    deployContract(
      name: "IERC1155MetadataURI",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155MetadataURI>;
    deployContract(
      name: "IERC1155",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155>;
    deployContract(
      name: "IERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC721Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Metadata>;
    deployContract(
      name: "IERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC777",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC777>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "IGeneralDistributionAgreementV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGeneralDistributionAgreementV1>;
    deployContract(
      name: "IPoolAdminNFT",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPoolAdminNFT>;
    deployContract(
      name: "IPoolMemberNFT",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPoolMemberNFT>;
    deployContract(
      name: "IPoolNFTBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPoolNFTBase>;
    deployContract(
      name: "ISuperfluidPool",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISuperfluidPool>;
    deployContract(
      name: "IConstantFlowAgreementV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IConstantFlowAgreementV1>;
    deployContract(
      name: "IInstantDistributionAgreementV1",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IInstantDistributionAgreementV1>;
    deployContract(
      name: "ISuperAgreement",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISuperAgreement>;
    deployContract(
      name: "ISuperApp",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISuperApp>;
    deployContract(
      name: "ISuperfluid",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISuperfluid>;
    deployContract(
      name: "ISuperfluidGovernance",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISuperfluidGovernance>;
    deployContract(
      name: "ISuperfluidToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISuperfluidToken>;
    deployContract(
      name: "ISuperToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISuperToken>;
    deployContract(
      name: "ISuperTokenFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISuperTokenFactory>;
    deployContract(
      name: "ISETH",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISETH>;
    deployContract(
      name: "ISETHCustom",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ISETHCustom>;
    deployContract(
      name: "Campaign",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Campaign>;
    deployContract(
      name: "CpFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.CpFactory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
